var ve=Object.defineProperty;var xe=(o,E,O)=>E in o?ve(o,E,{enumerable:!0,configurable:!0,writable:!0,value:O}):o[E]=O;var l=(o,E,O)=>(xe(o,typeof E!="symbol"?E+"":E,O),O);(function(){"use strict";var o=(i=>(i[i.UP=0]="UP",i[i.LEFT=1]="LEFT",i[i.FRONT=2]="FRONT",i[i.RIGHT=3]="RIGHT",i[i.BACK=4]="BACK",i[i.DOWN=5]="DOWN",i))(o||{});const E=()=>Object.keys(o).filter(i=>!isNaN(Number(i))).map(i=>Number(i)),O=i=>{switch(i){case 0:return 5;case 5:return 0;case 1:return 3;case 3:return 1;case 2:return 4;case 4:return 2}};var I=(i=>(i[i.YELLOW=0]="YELLOW",i[i.ORANGE=1]="ORANGE",i[i.BLUE=2]="BLUE",i[i.RED=3]="RED",i[i.GREEN=4]="GREEN",i[i.WHITE=5]="WHITE",i))(I||{});const Q=i=>{switch(i){case 2:return 4;case 4:return 2;case 3:return 1;case 1:return 3;case 0:return 5;case 5:return 0}},F=new Map;F.set(0,"y"),F.set(1,"o"),F.set(2,"b"),F.set(3,"r"),F.set(4,"g"),F.set(5,"w");const re=i=>F.get(i),k=new Map;k.set("y",0),k.set("o",1),k.set("b",2),k.set("r",3),k.set("g",4),k.set("w",5);const ee=i=>k.get(i),z=class{constructor(e){l(this,"dimension");l(this,"stickers");this.dimension=e,this.stickers=[]}create(){if(z.cubeletsCreatorMap.has(this.dimension))return z.cubeletsCreatorMap.get(this.dimension);{let e=0;E().map(u=>{for(let d=0;d<this.dimension;++d)for(let g=0;g<this.dimension;++g)this.stickers.push({side:u,x:g,y:d,id:e++})});const t=this.extractCenters(),s=this.extractCorners(),n=this.extractEdges(),r=[...s,...n,...t];return z.cubeletsCreatorMap.set(this.dimension,r),r}}cubeletsMerger(e){const t={stickers:[]};return e.forEach(s=>{this.stickers.forEach((n,r,u)=>{n.side===s.side&&s.x===n.x&&s.y===n.y&&t.stickers.push(...u.splice(r,1))})}),t}extractEdges(){const e=this.dimension-1,t=[];for(let s=1;s<this.dimension-1;++s)t.push(this.cubeletsMerger([{side:o.FRONT,x:0,y:s},{side:o.LEFT,x:e,y:s}])),t.push(this.cubeletsMerger([{side:o.FRONT,x:e,y:s},{side:o.RIGHT,x:0,y:s}])),t.push(this.cubeletsMerger([{side:o.FRONT,x:s,y:0},{side:o.UP,x:s,y:e}])),t.push(this.cubeletsMerger([{side:o.FRONT,x:s,y:e},{side:o.DOWN,x:s,y:0}])),t.push(this.cubeletsMerger([{side:o.BACK,x:e,y:s},{side:o.LEFT,x:0,y:s}])),t.push(this.cubeletsMerger([{side:o.BACK,x:0,y:s},{side:o.RIGHT,x:e,y:s}])),t.push(this.cubeletsMerger([{side:o.BACK,x:s,y:0},{side:o.UP,x:e-s,y:0}])),t.push(this.cubeletsMerger([{side:o.BACK,x:s,y:e},{side:o.DOWN,x:e-s,y:e}])),t.push(this.cubeletsMerger([{side:o.RIGHT,x:s,y:0},{side:o.UP,x:e,y:e-s}])),t.push(this.cubeletsMerger([{side:o.RIGHT,x:s,y:e},{side:o.DOWN,x:e,y:s}])),t.push(this.cubeletsMerger([{side:o.LEFT,x:s,y:0},{side:o.UP,x:0,y:s}])),t.push(this.cubeletsMerger([{side:o.LEFT,x:s,y:e},{side:o.DOWN,x:0,y:e-s}]));return t}extractCenters(){const e=this.dimension-1,t=[];return this.stickers.filter(s=>s.x!==0&&s.x!==e&&s.y!==0&&s.y!==e).forEach(s=>{t.push({stickers:[s]})}),t}extractCorners(){const e=[],t=this.dimension-1;return e.push(this.cubeletsMerger([{side:o.FRONT,x:0,y:0},{side:o.UP,x:0,y:t},{side:o.LEFT,x:t,y:0}])),e.push(this.cubeletsMerger([{side:o.FRONT,x:t,y:0},{side:o.UP,x:t,y:t},{side:o.RIGHT,x:0,y:0}])),e.push(this.cubeletsMerger([{side:o.FRONT,x:0,y:t},{side:o.DOWN,x:0,y:0},{side:o.LEFT,x:t,y:t}])),e.push(this.cubeletsMerger([{side:o.FRONT,x:t,y:t},{side:o.DOWN,x:t,y:0},{side:o.RIGHT,x:0,y:t}])),e.push(this.cubeletsMerger([{side:o.BACK,x:0,y:0},{side:o.UP,x:t,y:0},{side:o.RIGHT,x:t,y:0}])),e.push(this.cubeletsMerger([{side:o.BACK,x:t,y:0},{side:o.UP,x:0,y:0},{side:o.LEFT,x:0,y:0}])),e.push(this.cubeletsMerger([{side:o.BACK,x:0,y:t},{side:o.DOWN,x:t,y:t},{side:o.RIGHT,x:t,y:t}])),e.push(this.cubeletsMerger([{side:o.BACK,x:t,y:t},{side:o.DOWN,x:0,y:t},{side:o.LEFT,x:0,y:t}])),e}};let Y=z;l(Y,"cubeletsCreatorMap",new Map);const V=class{constructor(e){l(this,"dimension");if(this.dimension=e,!V.faceRotatorMap.has(this.dimension)){const t=new Map;for(let s=0;s<this.dimension;++s){console.log(`Creating rotation map for layer: ${s} of ${e}x${e} cubes`);const n=this.createUpFaceClockwiseRotator(s),r=this.createLeftFaceClockwiseRotator(s),u=this.createFrontFaceClockwiseRotator(s),d=this.createRightFaceClockwiseRotator(s),g=this.createBackFaceClockwiseRotator(s),f=this.createDownFaceClockwiseRotator(s),m=new Map;m.set(o.UP,n.map(C=>this.faceStickerMapper(C))),m.set(o.LEFT,r.map(C=>this.faceStickerMapper(C))),m.set(o.FRONT,u.map(C=>this.faceStickerMapper(C))),m.set(o.RIGHT,d.map(C=>this.faceStickerMapper(C))),m.set(o.BACK,g.map(C=>this.faceStickerMapper(C))),m.set(o.DOWN,f.map(C=>this.faceStickerMapper(C))),t.set(s,m)}V.faceRotatorMap.set(this.dimension,t)}}rotate(e,t){const s=new w({clone:e.getConfiguration()}),n=[];return V.faceRotatorMap.get(this.dimension).get(t.layer||0).get(t.side).forEach(r=>{t.counterClockwiseDirection?n.push({index:r.source,color:e.getColorOfIndex(r.destination)}):n.push({index:r.destination,color:e.getColorOfIndex(r.source)})}),s.setColorsOfIndexes(n),s}idMapper(e){let t=e.side*this.dimension*this.dimension;return t+=this.dimension*e.y,t+=e.x,t}faceStickerMapper(e){return{source:this.idMapper(e.source),destination:this.idMapper(e.destination)}}createSideLidClockwiseRotator(e){const t=[];for(let s=0;s<this.dimension*this.dimension;++s){const n=s%this.dimension,r=Math.floor(s/this.dimension),u=this.dimension-1-r,d=n;t.push({source:{side:e,x:n,y:r},destination:{side:e,x:u,y:d}})}return t}createUpFaceClockwiseRotator(e){this.dimension-1;const t=[];e===0&&t.push(...this.createSideLidClockwiseRotator(o.UP));for(let s=0;s<this.dimension;++s)t.push({source:{side:o.FRONT,x:s,y:e},destination:{side:o.LEFT,x:s,y:e}}),t.push({source:{side:o.LEFT,x:s,y:e},destination:{side:o.BACK,x:s,y:e}}),t.push({source:{side:o.BACK,x:s,y:e},destination:{side:o.RIGHT,x:s,y:e}}),t.push({source:{side:o.RIGHT,x:s,y:e},destination:{side:o.FRONT,x:s,y:e}});return t}createLeftFaceClockwiseRotator(e){const t=this.dimension-1,s=[];e===0&&s.push(...this.createSideLidClockwiseRotator(o.LEFT));for(let n=0;n<this.dimension;++n)s.push({source:{side:o.FRONT,x:e,y:n},destination:{side:o.DOWN,x:e,y:n}}),s.push({source:{side:o.DOWN,x:e,y:n},destination:{side:o.BACK,x:t-e,y:t-n}}),s.push({source:{side:o.BACK,x:t-e,y:t-n},destination:{side:o.UP,x:e,y:n}}),s.push({source:{side:o.UP,x:e,y:n},destination:{side:o.FRONT,x:e,y:n}});return s}createFrontFaceClockwiseRotator(e){const t=this.dimension-1,s=[];e===0&&s.push(...this.createSideLidClockwiseRotator(o.FRONT));for(let n=0;n<this.dimension;++n)s.push({source:{side:o.UP,x:n,y:t-e},destination:{side:o.RIGHT,x:e,y:n}}),s.push({source:{side:o.RIGHT,x:e,y:n},destination:{side:o.DOWN,x:t-n,y:e}}),s.push({source:{side:o.DOWN,x:t-n,y:e},destination:{side:o.LEFT,x:t-e,y:t-n}}),s.push({source:{side:o.LEFT,x:t-e,y:t-n},destination:{side:o.UP,x:n,y:t-e}});return s}createRightFaceClockwiseRotator(e){const t=this.dimension-1,s=[];e===0&&s.push(...this.createSideLidClockwiseRotator(o.RIGHT));for(let n=0;n<this.dimension;++n)s.push({source:{side:o.UP,x:t-e,y:n},destination:{side:o.BACK,x:e,y:t-n}}),s.push({source:{side:o.BACK,x:e,y:t-n},destination:{side:o.DOWN,x:t-e,y:n}}),s.push({source:{side:o.DOWN,x:t-e,y:n},destination:{side:o.FRONT,x:t-e,y:n}}),s.push({source:{side:o.FRONT,x:t-e,y:n},destination:{side:o.UP,x:t-e,y:n}});return s}createBackFaceClockwiseRotator(e){const t=this.dimension-1,s=[];e===0&&s.push(...this.createSideLidClockwiseRotator(o.BACK));for(let n=0;n<this.dimension;++n)s.push({source:{side:o.LEFT,x:e,y:n},destination:{side:o.DOWN,x:n,y:t-e}}),s.push({source:{side:o.DOWN,x:n,y:t-e},destination:{side:o.RIGHT,x:t-e,y:t-n}}),s.push({source:{side:o.RIGHT,x:t-e,y:t-n},destination:{side:o.UP,x:t-n,y:e}}),s.push({source:{side:o.UP,x:t-n,y:e},destination:{side:o.LEFT,x:e,y:n}});return s}createDownFaceClockwiseRotator(e){const t=this.dimension-1,s=[];e===0&&s.push(...this.createSideLidClockwiseRotator(o.DOWN));for(let n=0;n<this.dimension;++n)s.push({source:{side:o.LEFT,x:n,y:t-e},destination:{side:o.FRONT,x:n,y:t-e}}),s.push({source:{side:o.FRONT,x:n,y:t-e},destination:{side:o.RIGHT,x:n,y:t-e}}),s.push({source:{side:o.RIGHT,x:n,y:t-e},destination:{side:o.BACK,x:n,y:t-e}}),s.push({source:{side:o.BACK,x:n,y:t-e},destination:{side:o.LEFT,x:n,y:t-e}});return s}};let X=V;l(X,"faceRotatorMap",new Map);const L=new Map;L.set(o.FRONT,I.BLUE),L.set(o.UP,I.YELLOW),L.set(o.RIGHT,I.RED),L.set(o.LEFT,I.ORANGE),L.set(o.BACK,I.GREEN),L.set(o.DOWN,I.WHITE);class w{constructor(e){l(this,"configuration");l(this,"dimension");l(this,"faceRotator");l(this,"cubelets");if(this.dimension=e==null?void 0:e.dimension,e!=null&&e.clone)this.dimension=Math.sqrt(e.clone.length/6),this.configuration=e.clone.slice();else{const t=this.dimension*this.dimension,s=(e==null?void 0:e.colorMap)||L,n=E();this.configuration="";for(let r=0;r<n.length;++r){const u=s.get(r),d=re(u);this.configuration+=d.repeat(t)}}this.faceRotator=new X(this.dimension),this.cubelets=new Y(this.dimension).create()}clone(){return new w({clone:this.configuration})}getDimension(){return this.dimension}getConfiguration(){return this.configuration}getHash(){return this.configuration}translateCubeBits(){return this.configuration}isSolved(){const e=this.dimension*this.dimension,t=E(),s=Array.from(new Array(e));return t.every((n,r)=>s.every((u,d)=>this.configuration[r*e+d]===this.configuration[r*e]))}rotateFace(e){return this.faceRotator.rotate(this,e)}getAllCubelets(){return this.addColorToCubelets(this.cubelets)}getAllColorlessCubelets(){return this.cubelets}getCubeletsBySides(...e){const t=this.cubelets.filter(s=>s.stickers.every(n=>e.includes(n.side)));return this.addColorToCubelets(t)}getCubeletsByColor(...e){const t=this.cubelets.filter(s=>s.stickers.every(n=>e.includes(ee(this.configuration[n.id]))));return this.addColorToCubelets(t)}getColorOfIndex(e){return ee(this.configuration[e])}setColorsOfIndexes(e){const t=this.configuration.split("");e.forEach(s=>{t[s.index]=re(s.color)}),this.configuration=t.join("")}addColorToCubelets(e){return e.map(t=>({stickers:t.stickers.map(s=>({...s,color:ee(this.configuration[s.id])}))}))}}class he{readKeys(e){let t;switch(e.key.toLowerCase()){case"w":t=o.UP;break;case"a":t=o.LEFT;break;case"s":t=o.FRONT;break;case"d":t=o.RIGHT;break;case"f":t=o.BACK;break;case"x":t=o.DOWN;break}if(t!==void 0)return{side:t,counterClockwiseDirection:e.shiftKey,layer:0}}}class H{constructor(e){l(this,"moves");l(this,"findSolutionResolve");l(this,"findSolutionReject");l(this,"cube");l(this,"startTime");l(this,"keyboardInterpreter");this.cube=e,this.moves=[],this.keyboardInterpreter=new he}async findSolution(){return this.startTime=Date.now(),new Promise((e,t)=>{this.findSolutionResolve=e,this.findSolutionReject=t})}abort(){this.findSolutionReject()}async readKeys(e){if(this.cube.isSolved())return;const t=this.keyboardInterpreter.readKeys(e);if(t!==void 0)return this.moves.push(t),this.cube=this.cube.rotateFace(t),this.cube.isSolved()&&this.findSolutionResolve({rotations:this.moves,totalTime:Date.now()-this.startTime,data:{human:!0}}),t}}var le=typeof globalThis<"u"?globalThis:typeof window<"u"?window:typeof global<"u"?global:typeof self<"u"?self:{};function de(i){return i&&i.__esModule&&Object.prototype.hasOwnProperty.call(i,"default")?i.default:i}var te={},pe={get exports(){return te},set exports(i){te=i}},se={},fe={get exports(){return se},set exports(i){se=i}};(function(i,e){(function(){var t,s,n,r,u,d,g,f,m,C,j,P,ne,J,G;n=Math.floor,C=Math.min,s=function(a,c){return a<c?-1:a>c?1:0},m=function(a,c,h,p,R){var T;if(h==null&&(h=0),R==null&&(R=s),h<0)throw new Error("lo must be non-negative");for(p==null&&(p=a.length);h<p;)T=n((h+p)/2),R(c,a[T])<0?p=T:h=T+1;return[].splice.apply(a,[h,h-h].concat(c)),c},d=function(a,c,h){return h==null&&(h=s),a.push(c),J(a,0,a.length-1,h)},u=function(a,c){var h,p;return c==null&&(c=s),h=a.pop(),a.length?(p=a[0],a[0]=h,G(a,0,c)):p=h,p},f=function(a,c,h){var p;return h==null&&(h=s),p=a[0],a[0]=c,G(a,0,h),p},g=function(a,c,h){var p;return h==null&&(h=s),a.length&&h(a[0],c)<0&&(p=[a[0],c],c=p[0],a[0]=p[1],G(a,0,h)),c},r=function(a,c){var h,p,R,T,S,N;for(c==null&&(c=s),T=function(){N=[];for(var D=0,_=n(a.length/2);0<=_?D<_:D>_;0<=_?D++:D--)N.push(D);return N}.apply(this).reverse(),S=[],p=0,R=T.length;p<R;p++)h=T[p],S.push(G(a,h,c));return S},ne=function(a,c,h){var p;if(h==null&&(h=s),p=a.indexOf(c),p!==-1)return J(a,0,p,h),G(a,p,h)},j=function(a,c,h){var p,R,T,S,N;if(h==null&&(h=s),R=a.slice(0,c),!R.length)return R;for(r(R,h),N=a.slice(c),T=0,S=N.length;T<S;T++)p=N[T],g(R,p,h);return R.sort(h).reverse()},P=function(a,c,h){var p,R,T,S,N,D,_,Z,oe;if(h==null&&(h=s),c*10<=a.length){if(T=a.slice(0,c).sort(h),!T.length)return T;for(R=T[T.length-1],_=a.slice(c),S=0,D=_.length;S<D;S++)p=_[S],h(p,R)<0&&(m(T,p,0,null,h),T.pop(),R=T[T.length-1]);return T}for(r(a,h),oe=[],N=0,Z=C(c,a.length);0<=Z?N<Z:N>Z;0<=Z?++N:--N)oe.push(u(a,h));return oe},J=function(a,c,h,p){var R,T,S;for(p==null&&(p=s),R=a[h];h>c;){if(S=h-1>>1,T=a[S],p(R,T)<0){a[h]=T,h=S;continue}break}return a[h]=R},G=function(a,c,h){var p,R,T,S,N;for(h==null&&(h=s),R=a.length,N=c,T=a[c],p=2*c+1;p<R;)S=p+1,S<R&&!(h(a[p],a[S])<0)&&(p=S),a[c]=a[p],c=p,p=2*c+1;return a[c]=T,J(a,N,c,h)},t=function(){a.push=d,a.pop=u,a.replace=f,a.pushpop=g,a.heapify=r,a.updateItem=ne,a.nlargest=j,a.nsmallest=P;function a(c){this.cmp=c??s,this.nodes=[]}return a.prototype.push=function(c){return d(this.nodes,c,this.cmp)},a.prototype.pop=function(){return u(this.nodes,this.cmp)},a.prototype.peek=function(){return this.nodes[0]},a.prototype.contains=function(c){return this.nodes.indexOf(c)!==-1},a.prototype.replace=function(c){return f(this.nodes,c,this.cmp)},a.prototype.pushpop=function(c){return g(this.nodes,c,this.cmp)},a.prototype.heapify=function(){return r(this.nodes,this.cmp)},a.prototype.updateItem=function(c){return ne(this.nodes,c,this.cmp)},a.prototype.clear=function(){return this.nodes=[]},a.prototype.empty=function(){return this.nodes.length===0},a.prototype.size=function(){return this.nodes.length},a.prototype.clone=function(){var c;return c=new a,c.nodes=this.nodes.slice(0),c},a.prototype.toArray=function(){return this.nodes.slice(0)},a.prototype.insert=a.prototype.push,a.prototype.top=a.prototype.peek,a.prototype.front=a.prototype.peek,a.prototype.has=a.prototype.contains,a.prototype.copy=a.prototype.clone,a}(),function(a,c){return i.exports=c()}(this,function(){return t})}).call(le)})(fe),function(i){i.exports=se}(pe);var me=de(te);class q{constructor(e=!0){l(this,"map");l(this,"enabled");l(this,"measurerOverhead");l(this,"startTime");l(this,"totalTime");this.map=new Map,this.enabled=e,this.measurerOverhead=0}add(e,t){const s=new Date().getTime();if(!this.enabled)return t();const n=t(),r=new Date().getTime(),u=this.map.get(e)||{elapsedTime:0,calls:0,stack:"",stackSize:0};return u.elapsedTime+=r-s,++u.calls,this.map.set(e,u),this.measurerOverhead+=new Date().getTime()-r,n}start(){this.startTime=Date.now()}finish(){this.startTime&&(this.totalTime=Date.now()-this.startTime)}getTotalTime(){return this.totalTime}getData(e){const t=[];if(this.totalTime){let s=0;Array.from(this.map.entries()).forEach(n=>{const[r,u]=n;s+=u.elapsedTime,t.push(this.createSummary(u.elapsedTime,u.calls,r))}),e!=null&&e.notMeasuredLabel&&t.push(this.createSummary(this.totalTime-s,0,e.notMeasuredLabel)),e!=null&&e.measurementOverheadLabel&&t.push(this.createSummary(this.measurerOverhead,0,e.measurementOverheadLabel))}return t}createSummary(e,t,s){const n=100*e/this.totalTime;return{label:s,totalTime:e,totalRelativeTime:Math.trunc(100*n)/100+"%",numOfCalls:t,avgTimePerCall:e*1/(t||1)}}}var b=(i=>(i[i.ADD_CANDIDATE=0]="ADD_CANDIDATE",i[i.POP_CANDIDATE=1]="POP_CANDIDATE",i[i.CHECK_SOLUTION=2]="CHECK_SOLUTION",i[i.BREATHING_TIME=3]="BREATHING_TIME",i[i.HASH_CALCULATION=4]="HASH_CALCULATION",i[i.VISISTED_LIST_CHECK=5]="VISISTED_LIST_CHECK",i[i.ADD_TO_VISISTED_LIST_CHECK=6]="ADD_TO_VISISTED_LIST_CHECK",i[i.PERFORM_ROTATION=7]="PERFORM_ROTATION",i[i.NOT_MEASURED=8]="NOT_MEASURED",i[i.HEURISTIC_CALCULATION=9]="HEURISTIC_CALCULATION",i[i.GET_ALL_CUBELETS=10]="GET_ALL_CUBELETS",i[i.CUBELET_FINAL_POSITION=11]="CUBELET_FINAL_POSITION",i[i.CUBELET_SIMILARITY=12]="CUBELET_SIMILARITY",i[i.ITERATION=13]="ITERATION",i[i.SOLUTION_CREATION=14]="SOLUTION_CREATION",i[i.MEASUREMENT_OVERHEAD=15]="MEASUREMENT_OVERHEAD",i[i.ITERATIONS_COUNTER_INCREMENT=16]="ITERATIONS_COUNTER_INCREMENT",i[i.ABORTED_VERIFICATION=17]="ABORTED_VERIFICATION",i))(b||{});class ge{constructor(e){l(this,"measurer");l(this,"candidates");l(this,"goalState");l(this,"visitedChecklist");l(this,"actions");l(this,"dimension");l(this,"goalStateCubelets");l(this,"goalStateHash");l(this,"aborted");this.aborted=!1,this.dimension=e.getDimension(),this.candidates=new me((n,r)=>n.cost-r.cost),this.visitedChecklist=new Map;const t={cost:0,cube:e,rotation:void 0,parent:void 0,hash:e.getHash()};this.candidates.push(t),this.actions=[];const s=e.getCubeletsBySides(o.BACK,o.LEFT,o.DOWN)[0];this.goalState=this.buildSolvedPocketCubeFromCornerCubelet(s),this.goalStateHash=this.goalState.getHash(),console.log(this.goalStateHash),this.goalStateCubelets=new Map,this.goalState.getAllCubelets().forEach(n=>{const r=n.stickers.map(d=>d.color).sort().toString(),u=n.stickers.map(d=>d.side);this.goalStateCubelets.set(r,u)}),[o.FRONT,o.UP,o.RIGHT].map(n=>[!0,!1].map(r=>{this.actions.push({side:n,counterClockwiseDirection:r,layer:0})})),this.measurer=new q(ce.metrics.enabled)}async findSolution(){return new Promise((e,t)=>{this.measurer.start();let s,n=0;for(;this.measurer.add(b[16],()=>this.candidates.size()>0);){if(this.measurer.add(b[17],()=>this.aborted))return t();if(this.measurer.add(b[16],()=>++n),s=this.measurer.add(b[1],()=>this.candidates.pop()),!this.measurer.add(b[5],()=>this.visitedChecklist.has(s.hash))){if(this.measurer.add(b[2],()=>s.hash===this.goalStateHash))return e(this.measurer.add(b[14],()=>this.createSolution(s,n)));this.measurer.add(b[6],()=>this.visitedChecklist.set(s.hash,!0)),this.applyRotations(s)}}t(Error("No more candidates to explore"))})}abort(){this.aborted=!0}createSolution(e,t){this.measurer.finish(),this.candidates.clear();const s=[];let n=e;for(;n&&n.rotation;)s.unshift(n.rotation),n=n.parent;return{rotations:s,totalTime:this.measurer.getTotalTime(),data:{metrics:this.measurer.getData({notMeasuredLabel:b[8],measurementOverheadLabel:b[15]}),iterations:t}}}applyRotations(e){for(let t of this.actions){const s=this.measurer.add(b[7],()=>e.cube.rotateFace(t)),n=s.getHash(),r=this.measurer.add(b[9],()=>this.calculateDistanceToFinalState(s));this.measurer.add(b[5],()=>this.visitedChecklist.has(n))||this.measurer.add(b[0],()=>{this.candidates.push({cost:e.cost+1+r,cube:s,rotation:t,parent:e,hash:n})})}}calculateDistanceToFinalState(e){const t=this.dimension*this.dimension+this.dimension*4;return e.getConfiguration().split("").filter((n,r)=>n!==this.goalStateHash[r]).length/t}buildSolvedPocketCubeFromCornerCubelet(e){const t=new Map;return e.stickers.forEach(s=>{t.set(s.side,s.color),t.set(O(s.side),Q(s.color))}),new w({colorMap:t,dimension:this.dimension})}}var Te=y;function y(){this._start=null,this._end=null,this.length=0}y.prototype.unShift=function(i){if(this._start===null)this._start=M(i),this._end=this._start;else{var e=this._start;this._start.previous=M(i),this._start=this._start.previous,this._start.next=e}this.length++},y.prototype.push=function(i){if(this._start===null)this._start=M(i),this._end=this._start;else{var e=this._end;this._end.next=M(i),this._end=this._end.next,this._end.previous=e}this.length++},y.prototype.add=function(i,e){if(i%1===0)if(i<=0)this.unShift(e);else if(i>=this.length)this.push(e);else{var t=ie.call(this,i);if(t){var s=t.previous,n=t,r=M(e);r.previous=s,s.next=r,r.next=n,n.previous=r,this.length++}}},y.prototype.shift=function(){if(this._start){var i=this._start.data;return this._start.next===null?(this._end=null,this._start=null):(this._start=this._start.next,this._start.previous=null),this.length--,i}else return},y.prototype.pop=function(){if(this._end){var i=this._end.data;return this._end.previous===null?(this._end=null,this._start=null):(this._end=this._end.previous,this._end.next=null),this.length--,i}else return},y.prototype.remove=function(i){if(i===0)return this.shift();if(i===this.length-1)return this.pop();var e=ie.call(this,i);if(e){var t=e.previous,s=e.next;t.next=s,s.previous=t,this.length--}else return},y.prototype.first=function(){if(this._start)return this._start.data},y.prototype.last=function(){if(this._end)return this._end.data},y.prototype.get=function(i){var e=ie.call(this,i);if(e)return e.data},y.prototype.toString=function(){for(var i=this._start,e="",t=0;t<this.length;t++)typeof i.data=="object"?e+=JSON.stringify(i.data):e+=i.data,t!==this.length-1&&(e+=", "),i=i.next;return e};function M(i){return{data:i,previous:null,next:null}}function ie(i){var e,t;if(i>=this.length||i<0||i%1!==0)e=null;else if(i<this.length/2)for(e=this._start,t=0;t<i;t++)e=e.next;else for(e=this._end,t=this.length-1;t>i;t--)e=e.previous;return e}var v=(i=>(i[i.ADD_CANDIDATE=0]="ADD_CANDIDATE",i[i.POP_CANDIDATE=1]="POP_CANDIDATE",i[i.CHECK_SOLUTION=2]="CHECK_SOLUTION",i[i.BREATHING_TIME=3]="BREATHING_TIME",i[i.HASH_CALCULATION=4]="HASH_CALCULATION",i[i.VISISTED_LIST_CHECK=5]="VISISTED_LIST_CHECK",i[i.ADD_TO_VISISTED_LIST_CHECK=6]="ADD_TO_VISISTED_LIST_CHECK",i[i.PERFORM_ROTATION=7]="PERFORM_ROTATION",i[i.NOT_MEASURED=8]="NOT_MEASURED",i))(v||{});class Ce{constructor(e){l(this,"measurer");l(this,"candidates");l(this,"visitedChecklist");l(this,"actions");l(this,"aborted");this.measurer=new q,this.visitedChecklist=new Map,this.candidates=new Te,this.aborted=!1;const t={cube:e,rotation:void 0,parent:void 0};this.candidates.push(t),this.actions=this.createActions()}abort(){this.aborted=!0}async findSolution(){return new Promise((e,t)=>{this.measurer.start();let s,n=0;for(;this.candidates.length>0;){if(this.aborted)return t();if(++n,s=this.measurer.add(v[1],()=>this.candidates.shift()),!this.measurer.add(v[5],()=>this.visitedChecklist.has(s.cube.getHash()))){if(this.measurer.add(v[2],()=>s.cube.isSolved()))return this.measurer.finish(),e(this.createSolution(s,n));this.measurer.add(v[6],()=>this.visitedChecklist.set(s.cube.getHash(),!0)),this.applyRotations(s)}}t(Error("No more candidates to explore"))})}createActions(){const e=[],t=[o.RIGHT,o.LEFT][Math.floor(Math.random()*2)],s=[o.UP,o.DOWN][Math.floor(Math.random()*2)],n=[o.FRONT,o.BACK][Math.floor(Math.random()*2)];return[t,s,n].map(r=>[!0,!1].map(u=>{e.push({side:r,counterClockwiseDirection:u,layer:0})})),e}createSolution(e,t){const s=[];let n=e;for(;n&&n.rotation;)s.unshift(n.rotation),n=n.parent;return{rotations:s,totalTime:this.measurer.getTotalTime(),data:{metrics:this.measurer.getData(v[8]),iterations:t}}}applyRotations(e){this.actions.forEach(t=>{const s=this.measurer.add(v[7],()=>e.cube.rotateFace(t));this.measurer.add(v[5],()=>this.visitedChecklist.has(s.getHash()))||this.measurer.add(v[0],()=>{this.candidates.push({cube:s,rotation:t,parent:e})})})}}class ae{constructor(e,t){l(this,"mutationRate");l(this,"populationPerGeneration");l(this,"generationsCounter");this.generationsCounter=0,this.mutationRate=e,this.populationPerGeneration=t}createNextGeneration(e){++this.generationsCounter;const t=e.reduce((n,r)=>n+r.score,0),s=e.map(n=>({genes:n.genes,score:parseFloat(n.score.toString())/t}));return Array.from(Array(this.populationPerGeneration)).map(()=>this.createNewCitizen(this.pickOne(s),this.pickOne(s)))}getGenerationsCounter(){return this.generationsCounter}createNewCitizen(e,t){const s=Math.floor(Math.random()*e.genes.length);return{genes:e.genes.map((r,u)=>{let d=e.genes[u];return u>s&&(d=t.genes[u]),Math.random()<this.mutationRate&&(d*=Math.random()*2-1),d}),score:NaN}}pickOne(e){let t=0,s=Math.random();for(;s>0;)s-=e[t].score,++t;return--t,e[t]}}class B{constructor(e,t){l(this,"weights");l(this,"config");if(this.config=e,t)this.weights=t;else{const s=(this.config.inputs+this.config.outputs)*this.config.hiddenNeurons;this.weights=Array.from(Array(s)).map(()=>Math.random()*2-1)}}getWeights(){return this.weights}doTheMagic(e){if(e.length!==this.config.inputs)throw new Error(`Amount of function argument '${e.length}' should match configuration inputs quantity '${this.config.inputs}'`);const t=B.processLayer(e,this.weights.filter((s,n)=>n>=0&&n<this.config.inputs*this.config.hiddenNeurons),this.config.hiddenNeurons);return B.processLayer(t,this.weights.filter((s,n)=>n>=this.config.inputs*this.config.hiddenNeurons),this.config.outputs)}static processLayer(e,t,s){const n=Array.from(Array(s)).map(()=>0);return t.reduce((r,u,d)=>(r[d%s]+=u*e[d%e.length],r),n).map(r=>Math.tanh(r))}}const ue=(i,e)=>i.layer===e.layer&&i.side===e.side&&i.counterClockwiseDirection===e.counterClockwiseDirection,Re=(i,e)=>i.layer===e.layer&&i.side===e.side&&i.counterClockwiseDirection!==e.counterClockwiseDirection,Se=i=>({layer:i.layer,side:i.side,counterClockwiseDirection:!i.counterClockwiseDirection});class we{tune(e){const t=[];let s,n=!1,r=0;for(let u of e){if(s&&Re(u,s))t.pop(),n=!0,r=0;else{if(s&&ue(s,u)&&(++r,r===3)){t.pop(),t.pop(),t.push(Se(u)),r=0,n=!0;continue}s||++r,t.push(u)}s=u}return n?this.tune(t):t}}var K=(i=>(i[i.NOT_MEASURED=0]="NOT_MEASURED",i[i.RUN_NEURAL_NETWORK=1]="RUN_NEURAL_NETWORK",i[i.CALCULATE_CITIZEN_SCORE=2]="CALCULATE_CITIZEN_SCORE",i[i.ROTATIONS_TUNING=3]="ROTATIONS_TUNING",i))(K||{});const Ne=i=>i.toString(2).replace(/0/g,"").length;class be{constructor(e){l(this,"measurer");l(this,"inputs");l(this,"initialState");l(this,"actions");l(this,"neuroGeneticAlgorithm");l(this,"citizens");l(this,"aborted");l(this,"armageddonCounter");this.aborted=!1,this.measurer=new q,this.armageddonCounter=0,this.neuroGeneticAlgorithm=new ae(A.geneticData.mutationRate,A.geneticData.populationPerGeneration),this.initialState=e.clone(),this.inputs=e.getConfiguration().length,this.actions=[],this.actions=[],[o.FRONT,o.UP,o.RIGHT].map(t=>[!0,!1].map(s=>{this.actions.push({side:t,counterClockwiseDirection:s,layer:0})})),this.citizens=this.createNewPopulationFromScratch()}async findSolution(){return this.measurer.start(),new Promise((e,t)=>{for(;;){if(this.aborted)return t();for(let s of this.citizens)if(this.runCitizen(s))return e(this.createSolution(s));this.neuroGeneticAlgorithm.getGenerationsCounter()>A.geneticData.armageddonThreshold?(++this.armageddonCounter,this.citizens=this.createNewPopulationFromScratch()):this.citizens=this.createNewPopulationFromPreviousOne()}})}abort(){this.aborted=!0}createNewPopulationFromScratch(){return this.neuroGeneticAlgorithm=new ae(A.geneticData.mutationRate,A.geneticData.populationPerGeneration),this.actions.sort(()=>Math.random()*2-1),Array.from(new Array(A.geneticData.populationPerGeneration)).map(()=>{const e=new B({inputs:this.inputs,hiddenNeurons:A.neuralNetworkData.hiddenNeurons,outputs:this.actions.length});return{genes:e.getWeights(),neuralNetwork:e,cube:this.initialState.clone(),moves:[]}})}createNewPopulationFromPreviousOne(){return this.neuroGeneticAlgorithm.createNextGeneration(this.citizens.map(e=>({genes:e.genes,score:this.calculateCitizenScore(e)}))).map(e=>{const t=new B({inputs:this.inputs,hiddenNeurons:A.neuralNetworkData.hiddenNeurons,outputs:this.actions.length},e.genes);return{genes:e.genes,neuralNetwork:t,cube:this.initialState.clone(),moves:[]}})}runCitizen(e){return Array.from(new Array(A.neuralNetworkData.iterations)).reduce(t=>t||this.measurer.add(K[1],()=>{const s=e.neuralNetwork.doTheMagic(e.cube.getConfiguration());let n=0;for(let r of s){if(r>.75){const u=this.actions[n];if(e.cube=e.cube.rotateFace(u),e.moves.push(u),e.cube.isSolved())return!0}++n}return!1}),!1)}calculateCitizenScore(e){return this.measurer.add(K[2],()=>e.cube.getConfiguration().reduce((t,s,n)=>t+Ne(s&this.goalState[n]),0))}createSolution(e){const t=this.measurer.add(K[3],()=>new we().tune(e.moves));return this.measurer.finish(),{rotations:t,totalTime:this.measurer.getTotalTime(),data:{armageddonCounter:this.armageddonCounter,genes:e.genes,neuralNetwork:e.neuralNetwork,metrics:this.measurer.getData(K[0]),generations:this.neuroGeneticAlgorithm.getGenerationsCounter()}}}buildSolvedPocketCubeFromCornerCubelet(e){const t=new Map;return e.stickers.forEach(s=>{t.set(s.color,s.side),t.set(Q(s.color),O(s.side))}),new PocketCube({colorMap:t})}}class Ee{constructor(e=30){l(this,"moves");this.moves=e}scramble(e){let t;const s=Math.floor(e.getDimension()/2),n=E(),r=[];return Array.from(new Array(this.moves)).forEach(()=>{const u=Math.floor(Math.random()*6)===0,d=Math.floor(Math.random()*2)===0,g=Math.floor(Math.random()*s);let f=Math.floor(Math.random()*n.length),m={side:f,counterClockwiseDirection:d,layer:g};for(;t!==void 0&&t.side===m.side&&t.layer===m.layer;)f=Math.floor(Math.random()*n.length),m={side:f,counterClockwiseDirection:d,layer:g};t=m,u&&(m.counterClockwiseDirection=!1,r.push(m)),r.push(m)}),r.filter((u,d)=>d<this.moves)}}class ye{constructor(e){l(this,"mutationList");l(this,"generationsCounter");this.generationsCounter=0,this.mutationList=e}createNextGeneration(e){++this.generationsCounter;const s=e.sort((n,r)=>r.score-n.score).filter((n,r)=>r<U.elitism);return Array.from(Array(U.populationPerGeneration)).map(()=>this.createNewCitizen(s))}getGenerationsCounter(){return this.generationsCounter}createNewCitizen(e){const t=e[Math.floor(Math.random()*e.length)],s=()=>this.mutationList[Math.floor(Math.random()*this.mutationList.length)];return{cube:t.cube.clone(),genes:t.genes,goalState:[...t.goalState],newGenes:s().concat(s().concat(s())),score:NaN}}}class x{translateSide(e,t){const s=t.getAllCubelets(),n=t.getDimension(),r=10,u=(g,f,m)=>{for(const C of s){const j=C.stickers.find(P=>P.side===g&&P.x===f&&P.y===m);if(j)return j}console.log(`Sticker not found: ${o[g]}, ${f}, ${m}`)},d=[];d.push(`${(o[e]+Array.from(new Array(r)).fill(" ").join("")).substring(0,r)}`);for(let g=0;g<n;++g){let f="";for(let m=0;m<n;++m){const C=u(e,m,g);f+=I[C.color].substring(0,1)+x.mapToSubscript(`${("  "+C.id).slice(-2)}  `)}d.push(f)}return d}translateCube(e){const t=e.getDimension(),s=this.translateSide(o.UP,e),n=this.translateSide(o.LEFT,e),r=this.translateSide(o.FRONT,e),u=this.translateSide(o.RIGHT,e),d=this.translateSide(o.BACK,e),g=this.translateSide(o.DOWN,e);let f="";const m=Array.from(new Array(s[1].length)).fill(" ").join("");s.forEach(C=>{f+=m+C+`
`}),f+=n[0],f+=(m+r[0]).slice(-m.length),f+=(m+u[0]).slice(-m.length),f+=(m+d[0]).slice(-m.length)+`
`;for(let C=1;C<t+1;++C)f+=n[C],f+=r[C],f+=u[C],f+=d[C]+`
`;return g.forEach(C=>{f+=m+C+`
`}),f}convertStringToFaceRotations(e){return e.match(/((\d?)(\w)(\d?)('?))\s*/g).reduce((t,s)=>{const[n,r,u,d,g]=s.match(/(2?)(\w)(\d?)('?)/),f={side:o.UP,counterClockwiseDirection:(g==null?void 0:g.length)>0,layer:Number((d==null?void 0:d.length)>0)};switch(u.toLowerCase()){case"u":f.side=o.UP;break;case"l":f.side=o.LEFT;break;case"f":f.side=o.FRONT;break;case"r":f.side=o.RIGHT;break;case"b":f.side=o.BACK;break;case"d":f.side=o.DOWN;break;default:return t}return(r==null?void 0:r.length)>0&&t.push(f),t.push(f),t},[])}translateRotations(e,t){const s=[...e];let n=0,r="";t!=null&&t.showNumberOfMoves&&(n++,r+=`${e.length}:      `.substring(0,4));let u=s.shift();for(;u;){const d=s[0];let g=" ";d&&ue(d,u)&&(s.shift(),g="2");let f="";if(t&&t.showLayer){let m=1;u.layer!==void 0&&(m=u.layer+1),f=m.toString(),t.subscript&&(f=x.mapToSubscript(m.toString()))}r+=`${g}${o[u.side].substring(0,1)}${u.counterClockwiseDirection?"'":" "}${f}  `,(t==null?void 0:t.lineBreak)!==void 0&&n%(t==null?void 0:t.lineBreak)===(t==null?void 0:t.lineBreak)-1&&(r+=`
`),++n,u=s.shift()}return r}translateCubelets(e){let t="";return e.map(s=>{s.stickers.map(n=>{const r=I[n.color],u=o[n.side],d=x.mapToSmallTopLetters(n.id.toString()),g=`${x.mapToSubscript("("+n.x+","+n.y+")")}`;t+=`${r.substring(0,1).toUpperCase().concat(r.substring(1).toLowerCase())}: ${u}${d}${g};  `}),t+=`
`}),t}static mapToSmallTopLetters(e){const t=new Map;return t.set("0","⁰"),t.set("1","¹"),t.set("2","²"),t.set("3","³"),t.set("4","⁴"),t.set("5","⁵"),t.set("6","⁶"),t.set("7","⁷"),t.set("8","⁸"),t.set("9","⁹"),t.set(",","﹐"),e.split("").map(s=>t.has(s)?t.get(s):s).join("")}static mapToSubscript(e){const t=new Map;return t.set("0","₀"),t.set("1","₁"),t.set("2","₂"),t.set("3","₃"),t.set("4","₄"),t.set("5","₅"),t.set("6","₆"),t.set("7","₇"),t.set("8","₈"),t.set("9","₉"),t.set("0","₀"),t.set("(","₍"),t.set(")","₎"),e.split("").map(s=>t.has(s)?t.get(s):s).join("")}}var W=(i=>(i[i.NOT_MEASURED=0]="NOT_MEASURED",i[i.RUN_CITIZEN_ROTATIONS=1]="RUN_CITIZEN_ROTATIONS",i[i.CALCULATE_CITIZEN_SCORE=2]="CALCULATE_CITIZEN_SCORE",i[i.ROTATIONS_TUNING=3]="ROTATIONS_TUNING",i))(W||{});const Ae=i=>i.toString(2).replace(/0/g,"").length;class Oe{constructor(e){l(this,"measurer");l(this,"initialState");l(this,"geneticAlgorithm");l(this,"citizens");l(this,"aborted");l(this,"armageddonCounter");this.measurer=new q,this.initialState=e.clone(),this.aborted=!1,this.armageddonCounter=0,this.citizens=this.createNewPopulationFromScratch();const t=new x;this.geneticAlgorithm=new ye([t.convertStringToFaceRotations("F"),t.convertStringToFaceRotations("F'"),t.convertStringToFaceRotations("U"),t.convertStringToFaceRotations("U'"),t.convertStringToFaceRotations("R"),t.convertStringToFaceRotations("R'"),t.convertStringToFaceRotations("B U B'"),t.convertStringToFaceRotations("U R U'"),t.convertStringToFaceRotations("F U' F'"),t.convertStringToFaceRotations("D B D'"),t.convertStringToFaceRotations("R U R' U R 2U R'"),t.convertStringToFaceRotations("U R' U' R U' R' 2U R"),t.convertStringToFaceRotations("U' R' U' R U' R' 2U R"),t.convertStringToFaceRotations("2U R' U' R U' R' 2U R"),t.convertStringToFaceRotations("L' U R' 2D R U' R' 2D 2R"),t.convertStringToFaceRotations("2R L' U R' 2D R U' R' 2D"),t.convertStringToFaceRotations("2F L' U R' 2D R U' R' 2D 2R 2F'")])}async findSolution(){return this.measurer.start(),new Promise((e,t)=>{for(;;){if(this.aborted)return t();for(let s of this.citizens)if(this.runCitizen(s))return e(this.createSolution(s));this.geneticAlgorithm.getGenerationsCounter()>U.armageddonThreshold?(++this.armageddonCounter,this.citizens=this.createNewPopulationFromScratch()):this.citizens=this.createNewPopulationFromPreviousOne()}})}abort(){this.aborted=!0}createNewPopulationFromScratch(){return Array.from(new Array(U.populationPerGeneration)).map(()=>{const e=new Ee(1).scramble(this.initialState.clone()),t=this.initialState.clone(),s=t.getCubeletsBySides(o.BACK,o.LEFT,o.DOWN)[0],n=this.buildSolvedPocketCubeFromCornerCubelet(s).getConfiguration();return{cube:t.clone(),genes:[...e],goalState:[...n],score:NaN,newGenes:[]}})}createNewPopulationFromPreviousOne(){return this.geneticAlgorithm.createNextGeneration(this.citizens.map(e=>({cube:e.cube.clone(),genes:[...e.genes],newGenes:[],score:this.calculateCitizenScore(e),goalState:e.goalState})))}runCitizen(e){e.genes=e.genes.concat(e.newGenes);const t=[];let s=this.initialState.clone();for(let n of e.genes)if(this.measurer.add(W[1],()=>{if(t.push(n),s=s.rotateFace(n),s.isSolved()){const r=t.reduce((u,d)=>u.rotateFace(d),this.initialState.clone());return console.log("proof",e.genes),console.log(t),console.log(new x().translateCube(r)),console.log(new x().translateCube(s)),e.genes=t,!0}return!1}))return!0;return!1}calculateCitizenScore(e){return this.measurer.add(W[2],()=>e.cube.getConfiguration().reduce((t,s,n)=>t+Ae(s&e.goalState[n]),0))}createSolution(e){const t=this.measurer.add(W[3],()=>e.genes);return this.measurer.finish(),console.log(new x().translateCube(e.cube)),{rotations:t,totalTime:this.measurer.getTotalTime(),data:{armageddonCounter:this.armageddonCounter,metrics:this.measurer.getData(W[0]),generations:this.geneticAlgorithm.getGenerationsCounter()}}}buildSolvedPocketCubeFromCornerCubelet(e){const t=new Map;return e.stickers.forEach(s=>{t.set(s.color,s.side),t.set(Q(s.color),O(s.side))}),new w(this.initialState.getDimension(),{colorMap:t})}}const A={geneticData:{mutationRate:.05,populationPerGeneration:100,armageddonThreshold:500},neuralNetworkData:{hiddenNeurons:10,iterations:20}},U={populationPerGeneration:100,elitism:10,armageddonThreshold:10},ce={metrics:{enabled:!1},world:{debug:!1,scrambleMoves:10,scrambleRotationDuration:100,cubesCircleRay:5},renderers:{translationDuration:500,rotationDuration:250,titleDistance:8.5,cubeSize:2.5},cubeTypes:[{label:"2x2",dimension:2,instantiator:()=>new w({dimension:2}),methods:[{key:"Human",instantiator:i=>new H(new w({clone:i,dimension:2})),checked:!1,info:"Use keys 'WASDFX' combined with 'shift' to rotate cube faces"},{key:"BFS",instantiator:i=>new Ce(new w({clone:i,dimension:2})),checked:!1,info:"Breadth-first-search. Brute force"},{key:"A*",instantiator:i=>new ge(new w({clone:i,dimension:2})),checked:!0,info:"Astar. Uses number of misplaced cubies as heuristic"}]},{label:"3x3",dimension:3,instantiator:()=>new w({dimension:3}),methods:[{key:"Human",instantiator:i=>new H(new w({clone:i})),checked:!1,info:"Use keys 'WASDFX' combined with 'shift' to rotate cube faces"},{key:"NE",instantiator:i=>new be(new w({clone:i})),checked:!1,info:`Neuro Evolutionary. Uses number of misplaced stickers as fitness function. Internal neurons: ${A.neuralNetworkData.hiddenNeurons}. Population: ${A.geneticData.populationPerGeneration}. No elitism`},{key:"GA",instantiator:i=>new Oe(new w({clone:i})),checked:!0,info:`Predefined macro movements combined with genetic algorithm. Uses number of misplaced stickers as fitness function. Population: ${U.populationPerGeneration}. Elitism ${U.elitism}. Asexual reproduction`}]},{label:"4x4",dimension:4,instantiator:()=>new w({dimension:4}),methods:[{key:"Human",instantiator:i=>new H(new w({clone:i})),checked:!1,info:"Use keys 'WASDFX' combined with 'shift' and numbers to rotate cube faces"}]},{label:"5x5",dimension:5,instantiator:()=>new w({dimension:5}),methods:[{key:"Human",instantiator:i=>new H(new w({clone:i})),checked:!1,info:"Use keys 'WASDFX' combined with 'shift' and numbers to rotate cube faces"}]}]},Ie=i=>{for(let e of ce.cubeTypes)if(e.label.toLowerCase()===i.label.toLowerCase()){for(let t of e.methods)if(t.key.toLowerCase()===i.solverTag.toLowerCase())return t;return}};let $;self.onmessage=async i=>{if(i.data.abort)$.abort();else{const e=i.data.solverTag.toLowerCase(),t=Ie(i.data);if(e&&t)if(i.data.cube)try{$=t.instantiator(i.data.cube);const s=await $.findSolution();self.postMessage({solution:JSON.stringify(s),solverKey:e})}catch(s){console.log(`Solver '${i.data.label}.${e}' aborted`,s)}else if(i.data.keyboardEvent){if($ instanceof H){const s=await $.readKeys(i.data.keyboardEvent);s!==void 0&&self.postMessage({faceRotation:s,solverKey:e})}}else self.postMessage({error:`Command for '${i.data}' not found`,solverTag:i.data.solverTag});else self.postMessage({error:`Solver '${i.data.solverTag}' not found`,solverTag:i.data.solverTag})}}})();
