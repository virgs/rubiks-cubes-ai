var at=Object.defineProperty;var ut=(a,C,O)=>C in a?at(a,C,{enumerable:!0,configurable:!0,writable:!0,value:O}):a[C]=O;var p=(a,C,O)=>(ut(a,typeof C!="symbol"?C+"":C,O),O);(function(){"use strict";var a=(t=>(t[t.UP=0]="UP",t[t.LEFT=1]="LEFT",t[t.FRONT=2]="FRONT",t[t.RIGHT=3]="RIGHT",t[t.BACK=4]="BACK",t[t.DOWN=5]="DOWN",t))(a||{});const C=()=>Object.keys(a).filter(t=>!isNaN(Number(t))).map(t=>Number(t)),O=t=>{switch(t){case 0:return 5;case 5:return 0;case 1:return 3;case 3:return 1;case 2:return 4;case 4:return 2}};class W{constructor(i){p(this,"moves");p(this,"cube");p(this,"findSolutionResolve");p(this,"startTime");this.cube=i,this.moves=[]}async findSolution(){return this.startTime=Date.now(),new Promise(i=>{this.findSolutionResolve=i})}async readKeys(i){if(this.cube.isSolved())return;let e;switch(i.key.toLowerCase()){case"w":e=a.UP;break;case"a":e=a.LEFT;break;case"s":e=a.FRONT;break;case"d":e=a.RIGHT;break;case"f":e=a.BACK;break;case"x":e=a.DOWN;break}if(e!==void 0){const n={side:e,counterClockwiseDirection:i.shiftKey};return this.moves.push(n),this.cube=this.cube.rotateFace(n),this.cube.isSolved()&&this.findSolutionResolve({rotations:this.moves,totalTime:Date.now()-this.startTime,data:{human:!0}}),n}}}var J=typeof globalThis<"u"?globalThis:typeof window<"u"?window:typeof global<"u"?global:typeof self<"u"?self:{};function X(t){return t&&t.__esModule&&Object.prototype.hasOwnProperty.call(t,"default")?t.default:t}var U={},Q={get exports(){return U},set exports(t){U=t}},K={},Z={get exports(){return K},set exports(t){K=t}};(function(t,i){(function(){var e,n,u,d,f,I,E,x,V,z,j,Y,G,P,b;u=Math.floor,z=Math.min,n=function(s,o){return s<o?-1:s>o?1:0},V=function(s,o,r,c,h){var l;if(r==null&&(r=0),h==null&&(h=n),r<0)throw new Error("lo must be non-negative");for(c==null&&(c=s.length);r<c;)l=u((r+c)/2),h(o,s[l])<0?c=l:r=l+1;return[].splice.apply(s,[r,r-r].concat(o)),o},I=function(s,o,r){return r==null&&(r=n),s.push(o),P(s,0,s.length-1,r)},f=function(s,o){var r,c;return o==null&&(o=n),r=s.pop(),s.length?(c=s[0],s[0]=r,b(s,0,o)):c=r,c},x=function(s,o,r){var c;return r==null&&(r=n),c=s[0],s[0]=o,b(s,0,r),c},E=function(s,o,r){var c;return r==null&&(r=n),s.length&&r(s[0],o)<0&&(c=[s[0],o],o=c[0],s[0]=c[1],b(s,0,r)),o},d=function(s,o){var r,c,h,l,T,m;for(o==null&&(o=n),l=function(){m=[];for(var w=0,D=u(s.length/2);0<=D?w<D:w>D;0<=D?w++:w--)m.push(w);return m}.apply(this).reverse(),T=[],c=0,h=l.length;c<h;c++)r=l[c],T.push(b(s,r,o));return T},G=function(s,o,r){var c;if(r==null&&(r=n),c=s.indexOf(o),c!==-1)return P(s,0,c,r),b(s,c,r)},j=function(s,o,r){var c,h,l,T,m;if(r==null&&(r=n),h=s.slice(0,o),!h.length)return h;for(d(h,r),m=s.slice(o),l=0,T=m.length;l<T;l++)c=m[l],E(h,c,r);return h.sort(r).reverse()},Y=function(s,o,r){var c,h,l,T,m,w,D,F,M;if(r==null&&(r=n),o*10<=s.length){if(l=s.slice(0,o).sort(r),!l.length)return l;for(h=l[l.length-1],D=s.slice(o),T=0,w=D.length;T<w;T++)c=D[T],r(c,h)<0&&(V(l,c,0,null,r),l.pop(),h=l[l.length-1]);return l}for(d(s,r),M=[],m=0,F=z(o,s.length);0<=F?m<F:m>F;0<=F?++m:--m)M.push(f(s,r));return M},P=function(s,o,r,c){var h,l,T;for(c==null&&(c=n),h=s[r];r>o;){if(T=r-1>>1,l=s[T],c(h,l)<0){s[r]=l,r=T;continue}break}return s[r]=h},b=function(s,o,r){var c,h,l,T,m;for(r==null&&(r=n),h=s.length,m=o,l=s[o],c=2*o+1;c<h;)T=c+1,T<h&&!(r(s[c],s[T])<0)&&(c=T),s[o]=s[c],o=c,c=2*o+1;return s[o]=l,P(s,m,o,r)},e=function(){s.push=I,s.pop=f,s.replace=x,s.pushpop=E,s.heapify=d,s.updateItem=G,s.nlargest=j,s.nsmallest=Y;function s(o){this.cmp=o??n,this.nodes=[]}return s.prototype.push=function(o){return I(this.nodes,o,this.cmp)},s.prototype.pop=function(){return f(this.nodes,this.cmp)},s.prototype.peek=function(){return this.nodes[0]},s.prototype.contains=function(o){return this.nodes.indexOf(o)!==-1},s.prototype.replace=function(o){return x(this.nodes,o,this.cmp)},s.prototype.pushpop=function(o){return E(this.nodes,o,this.cmp)},s.prototype.heapify=function(){return d(this.nodes,this.cmp)},s.prototype.updateItem=function(o){return G(this.nodes,o,this.cmp)},s.prototype.clear=function(){return this.nodes=[]},s.prototype.empty=function(){return this.nodes.length===0},s.prototype.size=function(){return this.nodes.length},s.prototype.clone=function(){var o;return o=new s,o.nodes=this.nodes.slice(0),o},s.prototype.toArray=function(){return this.nodes.slice(0)},s.prototype.insert=s.prototype.push,s.prototype.top=s.prototype.peek,s.prototype.front=s.prototype.peek,s.prototype.has=s.prototype.contains,s.prototype.copy=s.prototype.clone,s}(),function(s,o){return t.exports=o()}(this,function(){return e})}).call(J)})(Z),function(t){t.exports=K}(Q);var q=X(U);const g=class{constructor(){g.faceRotatorMap||this.initializeMap()}rotate(i,e){const n=[...i];return g.faceRotatorMap.get(e.side).forEach(u=>{e.counterClockwiseDirection?n[u.source]=i[u.destination]:n[u.destination]=i[u.source]}),n}initializeMap(){g.faceRotatorMap=new Map;const i=this.createUpFaceClockwiseRotator(),e=this.createLeftFaceClockwiseRotator(),n=this.createFrontFaceClockwiseRotator(),u=this.createRightFaceClockwiseRotator(),d=this.createBackFaceClockwiseRotator(),f=this.createDownFaceClockwiseRotator();g.faceRotatorMap.set(a.UP,i),g.faceRotatorMap.set(a.LEFT,e),g.faceRotatorMap.set(a.FRONT,n),g.faceRotatorMap.set(a.RIGHT,u),g.faceRotatorMap.set(a.BACK,d),g.faceRotatorMap.set(a.DOWN,f)}createDownFaceClockwiseRotator(){return[{destination:6,source:18},{destination:7,source:19},{destination:10,source:6},{destination:11,source:7},{destination:14,source:10},{destination:15,source:11},{destination:18,source:14},{destination:19,source:15},{destination:20,source:23},{destination:21,source:20},{destination:22,source:21},{destination:23,source:22}]}createRightFaceClockwiseRotator(){return[{destination:1,source:9},{destination:2,source:10},{destination:9,source:21},{destination:10,source:22},{destination:12,source:15},{destination:13,source:12},{destination:14,source:13},{destination:15,source:14},{destination:16,source:2},{destination:19,source:1},{destination:21,source:19},{destination:22,source:16}]}createUpFaceClockwiseRotator(){return[{destination:0,source:3},{destination:1,source:0},{destination:2,source:1},{destination:3,source:2},{destination:4,source:8},{destination:5,source:9},{destination:8,source:12},{destination:9,source:13},{destination:12,source:16},{destination:13,source:17},{destination:16,source:4},{destination:17,source:5}]}createBackFaceClockwiseRotator(){return[{destination:0,source:13},{destination:1,source:14},{destination:4,source:1},{destination:7,source:0},{destination:13,source:22},{destination:14,source:23},{destination:16,source:19},{destination:17,source:16},{destination:18,source:17},{destination:19,source:18},{destination:22,source:7},{destination:23,source:4}]}createLeftFaceClockwiseRotator(){return[{destination:0,source:18},{destination:3,source:17},{destination:4,source:7},{destination:5,source:4},{destination:6,source:5},{destination:7,source:6},{destination:8,source:0},{destination:11,source:3},{destination:17,source:23},{destination:18,source:20},{destination:20,source:8},{destination:23,source:11}]}createFrontFaceClockwiseRotator(){return[{destination:2,source:5},{destination:3,source:6},{destination:5,source:20},{destination:6,source:21},{destination:8,source:11},{destination:9,source:8},{destination:10,source:9},{destination:11,source:10},{destination:12,source:3},{destination:15,source:2},{destination:20,source:15},{destination:21,source:12}]}};let N=g;p(N,"faceRotatorMap");var A=(t=>(t[t.YELLOW=0]="YELLOW",t[t.ORANGE=1]="ORANGE",t[t.BLUE=2]="BLUE",t[t.RED=3]="RED",t[t.GREEN=4]="GREEN",t[t.WHITE=5]="WHITE",t))(A||{});const tt=t=>{switch(t){case 2:return 4;case 4:return 2;case 3:return 1;case 1:return 3;case 0:return 5;case 5:return 0}},S=new Map;S.set(a.FRONT,A.BLUE),S.set(a.UP,A.YELLOW),S.set(a.RIGHT,A.RED),S.set(a.LEFT,A.ORANGE),S.set(a.BACK,A.GREEN),S.set(a.DOWN,A.WHITE);class et{constructor(i){p(this,"hash");p(this,"configuration");p(this,"dimension");if(this.dimension=i.dimension,i.clone)this.configuration=[...i.clone];else{let e=S;i.colorMap&&(e=i.colorMap),this.configuration=[],C().forEach(n=>{const u=Array.from(new Array(this.dimension*this.dimension)).map(()=>e.get(n));this.configuration.push(...u)})}this.hash=this.configuration.join(".")}getDimension(){return this.dimension}getConfiguration(){return[...this.configuration]}getHash(){return this.hash}}const H=[[{side:a.FRONT,id:8},{side:a.LEFT,id:5},{side:a.UP,id:3}],[{side:a.FRONT,id:9},{side:a.RIGHT,id:12},{side:a.UP,id:2}],[{side:a.FRONT,id:11},{side:a.LEFT,id:6},{side:a.DOWN,id:20}],[{side:a.FRONT,id:10},{side:a.RIGHT,id:15},{side:a.DOWN,id:21}],[{side:a.BACK,id:16},{side:a.RIGHT,id:13},{side:a.UP,id:1}],[{side:a.BACK,id:17},{side:a.LEFT,id:4},{side:a.UP,id:0}],[{side:a.BACK,id:19},{side:a.RIGHT,id:14},{side:a.DOWN,id:22}],[{side:a.BACK,id:18},{side:a.LEFT,id:7},{side:a.DOWN,id:23}]];class y extends et{constructor(e){super({dimension:2,stickersMap:H,clone:e&&e.clone,colorMap:e&&(e==null?void 0:e.colorMap)});p(this,"faceRotator");this.faceRotator=new N}clone(){return new y({clone:this.configuration})}isSolved(){const e=this.dimension*this.dimension,n=C(),u=Array.from(new Array(e));return n.every((d,f)=>u.every((I,E)=>this.configuration[f*e+E]===this.configuration[f*e]))}rotateFace(e){const n=this.faceRotator.rotate(this.configuration,e);return new y({clone:n})}getCubeletsBySides(...e){const n=H.filter(u=>u.every(d=>e.includes(d.side)));return this.getCubeletsFromStickers(n)}getCubeletsByColor(...e){const n=H.filter(u=>u.every(d=>e.includes(this.configuration[d.id])));return this.getCubeletsFromStickers(n)}getAllCubelets(){return this.getCubeletsFromStickers(H)}getCubeletsFromStickers(e){return e.map(n=>({stickers:n.map(u=>{const d=u.id%4===0||u.id%4===3?0:1,f=u.id%4===0||u.id%4===1?0:1;return{side:u.side,id:u.id,color:this.configuration[u.id],x:d,y:f}})}))}}class ${constructor(){p(this,"map");p(this,"startTime");p(this,"totalTime");this.map=new Map}add(i,e){const n=new Date().getTime(),u=e(),d=new Date().getTime(),f=this.map.get(i)||{time:0,calls:0};return f.time+=d-n,f.calls++,this.map.set(i,f),u}start(){this.startTime=Date.now()}finish(){this.startTime&&(this.totalTime=Date.now()-this.startTime)}getTotalTime(){return this.totalTime}getData(i){if(this.totalTime){let e=0;const n={};return Array.from(this.map.entries()).forEach(u=>{const[d,f]=u;e+=f.time,n[d]=this.createSummary(f.time,f.calls)}),i&&(n[i]=this.createSummary(this.totalTime-e,0)),n}}createSummary(i,e){let n=`${i}ms (~${Math.trunc(1e3*i/this.totalTime)/10}%)`;return e>0&&(n+=`; calls: ${e}; avg: ~${10*Math.trunc(1e6*i*1/e)/10}ns`),n}}var _=(t=>(t[t.ADD_CANDIDATE=0]="ADD_CANDIDATE",t[t.POP_CANDIDATE=1]="POP_CANDIDATE",t[t.CHECK_SOLUTION=2]="CHECK_SOLUTION",t[t.BREATHING_TIME=3]="BREATHING_TIME",t[t.HASH_CALCULATION=4]="HASH_CALCULATION",t[t.VISISTED_LIST_CHECK=5]="VISISTED_LIST_CHECK",t[t.ADD_TO_VISISTED_LIST_CHECK=6]="ADD_TO_VISISTED_LIST_CHECK",t[t.PERFORM_ROTATION=7]="PERFORM_ROTATION",t[t.NOT_MEASURED=8]="NOT_MEASURED",t))(_||{});class st{constructor(i){p(this,"measurer");p(this,"candidates");p(this,"goalState");p(this,"visitedChecklist");p(this,"actions");this.measurer=new $,this.candidates=new q((n,u)=>n.cost-u.cost),this.visitedChecklist=new Map;const e={cost:0,cube:i,rotation:void 0,parent:void 0};this.candidates.push(e),this.actions=[],this.goalState=this.buildSolvedPocketCubeFromCornerCubelet(i.getCubeletsBySides(a.BACK,a.LEFT,a.DOWN)[0]),[a.FRONT,a.UP,a.RIGHT].map(n=>[!0,!1].map(u=>{this.actions.push({side:n,counterClockwiseDirection:u,layer:0})}))}async findSolution(){return new Promise(i=>{this.measurer.start();let e,n=0;for(;this.candidates.size()>0;)if(++n,e=this.measurer.add(_[1],()=>this.candidates.pop()),!this.measurer.add(_[5],()=>this.visitedChecklist.has(e.cube.getHash()))){if(this.measurer.add(_[2],()=>e.cube.isSolved()))return this.measurer.finish(),this.candidates.clear(),i(this.createSolution(e,n));this.measurer.add(_[6],()=>this.visitedChecklist.set(e.cube.getHash(),!0)),this.applyRotations(e)}})}createSolution(i,e){const n=[];let u=i;for(;u&&u.rotation;)n.unshift(u.rotation),u=u.parent;return{rotations:n,totalTime:this.measurer.getTotalTime(),data:{metrics:this.measurer.getData(_[8]),iterations:e}}}applyRotations(i){this.actions.forEach(e=>{const n=this.measurer.add(_[7],()=>i.cube.rotateFace(e));this.measurer.add(_[5],()=>this.visitedChecklist.has(n.getHash()))||this.measurer.add(_[0],()=>{this.candidates.push({cost:i.cost+1+this.calculateDistanceToFinalState(n),cube:n,rotation:e,parent:i})})})}calculateDistanceToFinalState(i){return i.getAllCubelets().reduce((n,u)=>{const d=this.goalState.getCubeletsByColor(...u.stickers.map(f=>f.color))[0];return n+u.stickers.reduce((f,I)=>d.stickers.some(E=>E.side===I.side)?f-1:f,u.stickers.length)},0)/4}buildSolvedPocketCubeFromCornerCubelet(i){const e=new Map;return i.stickers.forEach(n=>{e.set(n.side,n.color),e.set(O(n.side),tt(n.color))}),new y({colorMap:e})}}var it=v;function v(){this._start=null,this._end=null,this.length=0}v.prototype.unShift=function(t){if(this._start===null)this._start=k(t),this._end=this._start;else{var i=this._start;this._start.previous=k(t),this._start=this._start.previous,this._start.next=i}this.length++},v.prototype.push=function(t){if(this._start===null)this._start=k(t),this._end=this._start;else{var i=this._end;this._end.next=k(t),this._end=this._end.next,this._end.previous=i}this.length++},v.prototype.add=function(t,i){if(t%1===0)if(t<=0)this.unShift(i);else if(t>=this.length)this.push(i);else{var e=B.call(this,t);if(e){var n=e.previous,u=e,d=k(i);d.previous=n,n.next=d,d.next=u,u.previous=d,this.length++}}},v.prototype.shift=function(){if(this._start){var t=this._start.data;return this._start.next===null?(this._end=null,this._start=null):(this._start=this._start.next,this._start.previous=null),this.length--,t}else return},v.prototype.pop=function(){if(this._end){var t=this._end.data;return this._end.previous===null?(this._end=null,this._start=null):(this._end=this._end.previous,this._end.next=null),this.length--,t}else return},v.prototype.remove=function(t){if(t===0)return this.shift();if(t===this.length-1)return this.pop();var i=B.call(this,t);if(i){var e=i.previous,n=i.next;e.next=n,n.previous=e,this.length--}else return},v.prototype.first=function(){if(this._start)return this._start.data},v.prototype.last=function(){if(this._end)return this._end.data},v.prototype.get=function(t){var i=B.call(this,t);if(i)return i.data},v.prototype.toString=function(){for(var t=this._start,i="",e=0;e<this.length;e++)typeof t.data=="object"?i+=JSON.stringify(t.data):i+=t.data,e!==this.length-1&&(i+=", "),t=t.next;return i};function k(t){return{data:t,previous:null,next:null}}function B(t){var i,e;if(t>=this.length||t<0||t%1!==0)i=null;else if(t<this.length/2)for(i=this._start,e=0;e<t;e++)i=i.next;else for(i=this._end,e=this.length-1;e>t;e--)i=i.previous;return i}var R=(t=>(t[t.ADD_CANDIDATE=0]="ADD_CANDIDATE",t[t.POP_CANDIDATE=1]="POP_CANDIDATE",t[t.CHECK_SOLUTION=2]="CHECK_SOLUTION",t[t.BREATHING_TIME=3]="BREATHING_TIME",t[t.HASH_CALCULATION=4]="HASH_CALCULATION",t[t.VISISTED_LIST_CHECK=5]="VISISTED_LIST_CHECK",t[t.ADD_TO_VISISTED_LIST_CHECK=6]="ADD_TO_VISISTED_LIST_CHECK",t[t.PERFORM_ROTATION=7]="PERFORM_ROTATION",t[t.NOT_MEASURED=8]="NOT_MEASURED",t))(R||{});class nt{constructor(i){p(this,"measurer");p(this,"candidates");p(this,"visitedChecklist");p(this,"actions");this.measurer=new $,this.visitedChecklist=new Map,this.candidates=new it;const e={cube:i,rotation:void 0,parent:void 0};this.candidates.push(e),this.actions=[],[a.FRONT,a.UP,a.RIGHT].map(n=>[!0,!1].map(u=>{this.actions.push({side:n,counterClockwiseDirection:u,layer:0})}))}async findSolution(){return new Promise(i=>{this.measurer.start();let e,n=0;for(;this.candidates.length>0;)if(++n,e=this.measurer.add(R[1],()=>this.candidates.shift()),!this.measurer.add(R[5],()=>this.visitedChecklist.has(e.cube.getHash()))){if(this.measurer.add(R[2],()=>e.cube.isSolved()))return this.measurer.finish(),i(this.createSolution(e,n));this.measurer.add(R[6],()=>this.visitedChecklist.set(e.cube.getHash(),!0)),this.applyRotations(e)}})}createSolution(i,e){const n=[];let u=i;for(;u&&u.rotation;)n.unshift(u.rotation),u=u.parent;return{rotations:n,totalTime:this.measurer.getTotalTime(),data:{metrics:this.measurer.getData(R[8]),iterations:e}}}applyRotations(i){this.actions.forEach(e=>{const n=this.measurer.add(R[7],()=>i.cube.rotateFace(e));this.measurer.add(R[5],()=>this.visitedChecklist.has(n.getHash()))||this.measurer.add(R[0],()=>{this.candidates.push({cube:n,rotation:e,parent:i})})})}}const ot={world:{debug:!1,scrambleMoves:20,scrambleRotationDuration:100,cubesCircleRay:5},renderers:{translationDuration:500,rotationDuration:300,titleDistance:8.5,cubeSize:2.5},solvers:[{dimension:"2x2",methods:[{key:"Human",instantiator:t=>new W(t),checked:!1,info:"Use keys WASDFX combined with shift to rotate cube faces"},{key:"BFS",instantiator:t=>new nt(t),checked:!1},{key:"A*",instantiator:t=>new st(t),checked:!0}]},{dimension:"3x3",methods:[]},{dimension:"4x4",methods:[]}]},rt=t=>{for(let i of ot.solvers)if(i.dimension.toLowerCase()===t.dimension.toLowerCase()){for(let e of i.methods)if(e.key.toLowerCase()===t.solverTag.toLowerCase())return e;return}};let L;self.onmessage=async t=>{const i=t.data.solverTag.toLowerCase(),e=rt(t.data);if(i&&e)if(t.data.cube){const n=new y({clone:t.data.cube});L=e.instantiator(n);const u=await L.findSolution();self.postMessage({solution:JSON.stringify(u),solverKey:i})}else if(t.data.keyboardEvent){if(L instanceof W){const n=await L.readKeys(t.data.keyboardEvent);n!==void 0&&self.postMessage({faceRotation:n,solverKey:i})}}else self.postMessage({error:`Command for '${t.data}' not found`,solverTag:t.data.solverTag});else self.postMessage({error:`Solver '${t.data.solverTag}' not found`,solverTag:t.data.solverTag})}})();
