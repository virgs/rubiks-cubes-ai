var At=Object.defineProperty;var Et=(r,A,O)=>A in r?At(r,A,{enumerable:!0,configurable:!0,writable:!0,value:O}):r[A]=O;var h=(r,A,O)=>(Et(r,typeof A!="symbol"?A+"":A,O),O);(function(){"use strict";var r=(n=>(n[n.UP=0]="UP",n[n.LEFT=1]="LEFT",n[n.FRONT=2]="FRONT",n[n.RIGHT=3]="RIGHT",n[n.BACK=4]="BACK",n[n.DOWN=5]="DOWN",n))(r||{});const A=()=>Object.keys(r).filter(n=>!isNaN(Number(n))).map(n=>Number(n)),O=n=>{switch(n){case 0:return 5;case 5:return 0;case 1:return 3;case 3:return 1;case 2:return 4;case 4:return 2}},R=class{constructor(){R.faceRotatorMap||this.initializeMap()}static setColorOfIndex(e,t,o){e.forEach((s,a,u)=>{a===o?u[a]|=1<<t:u[a]&=-1^1<<t})}static getColorOfIndex(e,t){let o=0;for(let s of e){if(s&1<<t)return o;++o}}rotate(e,t){const o=[...e];return R.faceRotatorMap.get(t.side).forEach(s=>{t.counterClockwiseDirection?R.setColorOfIndex(o,s.source,R.getColorOfIndex(e,s.destination)):R.setColorOfIndex(o,s.destination,R.getColorOfIndex(e,s.source))}),o}initializeMap(){R.faceRotatorMap=new Map;const e=this.createUpFaceClockwiseRotator(),t=this.createLeftFaceClockwiseRotator(),o=this.createFrontFaceClockwiseRotator(),s=this.createRightFaceClockwiseRotator(),a=this.createBackFaceClockwiseRotator(),u=this.createDownFaceClockwiseRotator();R.faceRotatorMap.set(r.UP,e),R.faceRotatorMap.set(r.LEFT,t),R.faceRotatorMap.set(r.FRONT,o),R.faceRotatorMap.set(r.RIGHT,s),R.faceRotatorMap.set(r.BACK,a),R.faceRotatorMap.set(r.DOWN,u)}createDownFaceClockwiseRotator(){return[{destination:6,source:18},{destination:7,source:19},{destination:10,source:6},{destination:11,source:7},{destination:14,source:10},{destination:15,source:11},{destination:18,source:14},{destination:19,source:15},{destination:20,source:23},{destination:21,source:20},{destination:22,source:21},{destination:23,source:22}]}createRightFaceClockwiseRotator(){return[{destination:1,source:9},{destination:2,source:10},{destination:9,source:21},{destination:10,source:22},{destination:12,source:15},{destination:13,source:12},{destination:14,source:13},{destination:15,source:14},{destination:16,source:2},{destination:19,source:1},{destination:21,source:19},{destination:22,source:16}]}createUpFaceClockwiseRotator(){return[{destination:0,source:3},{destination:1,source:0},{destination:2,source:1},{destination:3,source:2},{destination:4,source:8},{destination:5,source:9},{destination:8,source:12},{destination:9,source:13},{destination:12,source:16},{destination:13,source:17},{destination:16,source:4},{destination:17,source:5}]}createBackFaceClockwiseRotator(){return[{destination:0,source:13},{destination:1,source:14},{destination:4,source:1},{destination:7,source:0},{destination:13,source:22},{destination:14,source:23},{destination:16,source:19},{destination:17,source:16},{destination:18,source:17},{destination:19,source:18},{destination:22,source:7},{destination:23,source:4}]}createLeftFaceClockwiseRotator(){return[{destination:0,source:18},{destination:3,source:17},{destination:4,source:7},{destination:5,source:4},{destination:6,source:5},{destination:7,source:6},{destination:8,source:0},{destination:11,source:3},{destination:17,source:23},{destination:18,source:20},{destination:20,source:8},{destination:23,source:11}]}createFrontFaceClockwiseRotator(){return[{destination:2,source:5},{destination:3,source:6},{destination:5,source:20},{destination:6,source:21},{destination:8,source:11},{destination:9,source:8},{destination:10,source:9},{destination:11,source:10},{destination:12,source:3},{destination:15,source:2},{destination:20,source:15},{destination:21,source:12}]}};let z=R;h(z,"faceRotatorMap");var E=(n=>(n[n.YELLOW=0]="YELLOW",n[n.ORANGE=1]="ORANGE",n[n.BLUE=2]="BLUE",n[n.RED=3]="RED",n[n.GREEN=4]="GREEN",n[n.WHITE=5]="WHITE",n))(E||{});const st=()=>Object.keys(E).filter(n=>!isNaN(Number(n))).map(n=>Number(n)),Z=n=>{switch(n){case 2:return 4;case 4:return 2;case 3:return 1;case 1:return 3;case 0:return 5;case 5:return 0}},k=new Map;k.set(E.BLUE,r.FRONT),k.set(E.YELLOW,r.UP),k.set(E.RED,r.RIGHT),k.set(E.ORANGE,r.LEFT),k.set(E.GREEN,r.BACK),k.set(E.WHITE,r.DOWN);const Y=[[{side:r.FRONT,id:8},{side:r.LEFT,id:5},{side:r.UP,id:3}],[{side:r.FRONT,id:9},{side:r.RIGHT,id:12},{side:r.UP,id:2}],[{side:r.FRONT,id:11},{side:r.LEFT,id:6},{side:r.DOWN,id:20}],[{side:r.FRONT,id:10},{side:r.RIGHT,id:15},{side:r.DOWN,id:21}],[{side:r.BACK,id:16},{side:r.RIGHT,id:13},{side:r.UP,id:1}],[{side:r.BACK,id:17},{side:r.LEFT,id:4},{side:r.UP,id:0}],[{side:r.BACK,id:19},{side:r.RIGHT,id:14},{side:r.DOWN,id:22}],[{side:r.BACK,id:18},{side:r.LEFT,id:7},{side:r.DOWN,id:23}]];class b{constructor(e){h(this,"hash");h(this,"configuration");h(this,"dimension");h(this,"faceRotator");if(this.faceRotator=new z,this.dimension=2,e!=null&&e.clone)this.configuration=[...e.clone];else{const t=(e==null?void 0:e.colorMap)||k;this.configuration=st().map(o=>15<<t.get(o)*4)}this.hash=this.configuration.join(".")}clone(){return new b({clone:this.configuration})}getDimension(){return this.dimension}getConfiguration(){return[...this.configuration]}getHash(){return this.hash}getColorOfIndex(e){let t=0;for(let o of this.configuration){if(o&1<<e)return t;++t}}isSolved(){const e=this.dimension*this.dimension,t=A(),o=Array.from(new Array(e));return t.every((s,a)=>o.every((u,f)=>this.getColorOfIndex(a*e+f)===this.getColorOfIndex(a*e)))}rotateFace(e){const t=this.faceRotator.rotate(this.configuration,e);return new b({clone:t})}getCubeletsBySides(...e){const t=Y.filter(o=>o.every(s=>e.includes(s.side)));return this.getCubeletsFromStickers(t)}getCubeletsByColor(...e){const t=Y.filter(o=>o.every(s=>e.includes(this.getColorOfIndex(s.id))));return this.getCubeletsFromStickers(t)}getAllCubelets(){return this.getCubeletsFromStickers(Y)}getCubeletsFromStickers(e){return e.map(t=>({stickers:t.map(o=>{const s=o.id%4===0||o.id%4===3?0:1,a=o.id%4===0||o.id%4===1?0:1;return{side:o.side,id:o.id,color:this.getColorOfIndex(o.id),x:s,y:a}})}))}}class it{constructor(e=30){h(this,"moves");this.moves=e}scramble(e){let t;const o=Math.floor(e.getDimension()/2),s=A(),a=[];return Array.from(new Array(this.moves)).forEach(()=>{const u=Math.floor(Math.random()*6)===0,f=Math.floor(Math.random()*2)===0,C=Math.floor(Math.random()*o);let p=Math.floor(Math.random()*s.length),g={side:p,counterClockwiseDirection:f,layer:C};for(;t!==void 0&&t.side===g.side&&t.layer===g.layer;)p=Math.floor(Math.random()*s.length),g={side:p,counterClockwiseDirection:f,layer:C};t=g,u&&(g.counterClockwiseDirection=!1,a.push(g)),a.push(g)}),a.filter((u,f)=>f<this.moves)}}const et=(n,e)=>n.layer===e.layer&&n.side===e.side&&n.counterClockwiseDirection===e.counterClockwiseDirection,rt=(n,e)=>n.layer===e.layer&&n.side===e.side&&n.counterClockwiseDirection!==e.counterClockwiseDirection,at=n=>({layer:n.layer,side:n.side,counterClockwiseDirection:!n.counterClockwiseDirection});class y{translateSide(e,t){const o=t.getAllCubelets(),s=t.getDimension(),a=10,u=(C,p,g)=>{for(const L of o){const $=L.stickers.find(P=>P.side===C&&P.x===p&&P.y===g);if($)return $}},f=[];f.push(`${(r[e]+Array.from(new Array(a)).fill(" ").join("")).substring(0,a)}`);for(let C=0;C<s;++C){let p="";for(let g=0;g<s;++g){const L=u(e,g,C);p+=E[L.color].substring(0,1)+y.mapToSubscript(`${("  "+L.id).slice(-2)}  `)}f.push(p)}return f}translateCube(e){const t=e.getDimension(),o=this.translateSide(r.UP,e),s=this.translateSide(r.LEFT,e),a=this.translateSide(r.FRONT,e),u=this.translateSide(r.RIGHT,e),f=this.translateSide(r.BACK,e),C=this.translateSide(r.DOWN,e);let p="";o.forEach(g=>{p+=Array.from(new Array(o[0].length)).fill(" ").join("")+g+`
`});for(let g=0;g<t+1;++g)p+=s[g],p+=a[g],p+=u[g],p+=f[g]+`
`;return C.forEach(g=>{p+=Array.from(new Array(C[0].length)).fill(" ").join("")+g+`
`}),p}convertStringToFaceRotations(...e){return e.reduce((t,o)=>{const[s,a,u,f,C]=o.match(/(2?)(\w)(\d?)('?)/),p={side:r.UP,counterClockwiseDirection:(C==null?void 0:C.length)>0,layer:Number((f==null?void 0:f.length)>0)};switch(u.toLowerCase()){case"u":p.side=r.UP;break;case"l":p.side=r.LEFT;break;case"f":p.side=r.FRONT;break;case"r":p.side=r.RIGHT;break;case"b":p.side=r.BACK;break;case"d":p.side=r.DOWN;break;default:return t}return(a==null?void 0:a.length)>0&&t.push(p),t.push(p),t},[])}translateRotations(e,t){const o=[...e];let s=0,a="";t!=null&&t.showNumberOfMoves&&(s++,a+=`${e.length}:      `.substring(0,4));let u=o.shift();for(;u;){const f=o[0];let C=" ";f&&et(f,u)&&(o.shift(),C="2");let p="";if(t&&t.showLayer){let g=1;u.layer!==void 0&&(g=u.layer+1),p=g.toString(),t.subscript&&(p=y.mapToSubscript(g.toString()))}a+=`${C}${r[u.side].substring(0,1)}${u.counterClockwiseDirection?"'":" "}${p}  `,(t==null?void 0:t.lineBreak)!==void 0&&s%(t==null?void 0:t.lineBreak)===(t==null?void 0:t.lineBreak)-1&&(a+=`
`),++s,u=o.shift()}return a}translateCubelets(e){let t="";return e.map(o=>{o.stickers.map(s=>{const a=E[s.color],u=r[s.side],f=y.mapToSmallTopLetters(s.id.toString()),C=`${y.mapToSubscript("("+s.x+","+s.y+")")}`;t+=`${a.substring(0,1).toUpperCase().concat(a.substring(1).toLowerCase())}: ${u}${f}${C};  `}),t+=`
`}),t}static mapToSmallTopLetters(e){const t=new Map;return t.set("0","⁰"),t.set("1","¹"),t.set("2","²"),t.set("3","³"),t.set("4","⁴"),t.set("5","⁵"),t.set("6","⁶"),t.set("7","⁷"),t.set("8","⁸"),t.set("9","⁹"),t.set(",","﹐"),e.split("").map(o=>t.has(o)?t.get(o):o).join("")}static mapToSubscript(e){const t=new Map;return t.set("0","₀"),t.set("1","₁"),t.set("2","₂"),t.set("3","₃"),t.set("4","₄"),t.set("5","₅"),t.set("6","₆"),t.set("7","₇"),t.set("8","₈"),t.set("9","₉"),t.set("0","₀"),t.set("(","₍"),t.set(")","₎"),e.split("").map(o=>t.has(o)?t.get(o):o).join("")}}class ut{tune(e){const t=[];let o,s=!1,a=0;for(let u of e){if(o&&rt(u,o))t.pop(),s=!0,a=0;else{if(o&&et(o,u)&&(++a,a===3)){t.pop(),t.pop(),t.push(at(u)),a=0,s=!0;continue}t.push(u)}o=u}return s?this.tune(t):t}}class j{constructor(){h(this,"map");h(this,"startTime");h(this,"totalTime");this.map=new Map}add(e,t){const o=new Date().getTime(),s=t(),a=new Date().getTime(),u=this.map.get(e)||{time:0,calls:0};return u.time+=a-o,u.calls++,this.map.set(e,u),s}start(){this.startTime=Date.now()}finish(){this.startTime&&(this.totalTime=Date.now()-this.startTime)}getTotalTime(){return this.totalTime}getData(e){if(this.totalTime){let t=0;const o={};return Array.from(this.map.entries()).forEach(s=>{const[a,u]=s;t+=u.time,o[a]=this.createSummary(u.time,u.calls)}),e&&(o[e]=this.createSummary(this.totalTime-t,0)),o}}createSummary(e,t){let o=`${e}ms (~${Math.trunc(1e3*e/this.totalTime)/10}%)`;return t>0&&(o+=`; calls: ${t}; avg: ~${10*Math.trunc(1e6*e*1/t)/10}ns`),o}}class ct{constructor(e){h(this,"mutationList");h(this,"generationsCounter");this.generationsCounter=0,this.mutationList=e}createNextGeneration(e){++this.generationsCounter;const o=e.sort((s,a)=>a.score-s.score).filter((s,a)=>a<U.elitism);return Array.from(Array(U.populationPerGeneration)).map(()=>this.createNewCitizen(o))}getGenerationsCounter(){return this.generationsCounter}createNewCitizen(e){const t=e[Math.floor(Math.random()*e.length)],o=()=>this.mutationList[Math.floor(Math.random()*this.mutationList.length)];return{cube:t.cube.clone(),genes:t.genes,goalState:[...t.goalState],newGenes:o().concat(o().concat(o())),score:NaN}}}var x=(n=>(n[n.NOT_MEASURED=0]="NOT_MEASURED",n[n.RUN_CITIZEN_ROTATIONS=1]="RUN_CITIZEN_ROTATIONS",n[n.CALCULATE_CITIZEN_SCORE=2]="CALCULATE_CITIZEN_SCORE",n[n.ROTATIONS_TUNING=3]="ROTATIONS_TUNING",n))(x||{});const lt=n=>n.toString(2).replace(/0/g,"").length;class ht{constructor(e){h(this,"measurer");h(this,"initialState");h(this,"geneticAlgorithm");h(this,"citizens");h(this,"aborted");h(this,"armageddonCounter");this.measurer=new j,this.initialState=e.clone(),this.aborted=!1,this.armageddonCounter=0,this.citizens=this.createNewPopulationFromScratch();const t=new y;this.geneticAlgorithm=new ct([t.convertStringToFaceRotations("F"),t.convertStringToFaceRotations("F'"),t.convertStringToFaceRotations("U"),t.convertStringToFaceRotations("U'"),t.convertStringToFaceRotations("R"),t.convertStringToFaceRotations("R'"),t.convertStringToFaceRotations("B","U","B'"),t.convertStringToFaceRotations("U","R","U'"),t.convertStringToFaceRotations("F","U'","F'"),t.convertStringToFaceRotations("D","B","D'"),t.convertStringToFaceRotations("R","U","R'","U","R","2U","R'"),t.convertStringToFaceRotations("U","R'","U'","R","U'","R'","2U","R"),t.convertStringToFaceRotations("U'","R'","U'","R","U'","R'","2U","R")])}async findSolution(){return this.measurer.start(),new Promise((e,t)=>{for(;;){if(this.aborted)return t();for(let o of this.citizens)if(this.runCitizen(o))return e(this.createSolution(o));this.geneticAlgorithm.getGenerationsCounter()>U.armageddonThreshold?(++this.armageddonCounter,this.citizens=this.createNewPopulationFromScratch()):this.citizens=this.createNewPopulationFromPreviousOne()}})}abort(){this.aborted=!0}createNewPopulationFromScratch(){return Array.from(new Array(U.populationPerGeneration)).map(()=>{const e=new it(1).scramble(this.initialState.clone()),t=e.reduce((a,u)=>a.rotateFace(u),this.initialState.clone()),o=t.getCubeletsBySides(r.BACK,r.LEFT,r.DOWN)[0],s=this.buildSolvedPocketCubeFromCornerCubelet(o).getConfiguration();return{cube:t.clone(),genes:[...e],goalState:[...s],score:NaN,newGenes:[]}})}createNewPopulationFromPreviousOne(){return this.geneticAlgorithm.createNextGeneration(this.citizens.map(e=>({cube:e.cube.clone(),genes:[...e.genes],newGenes:[],score:this.calculateCitizenScore(e),goalState:e.goalState})))}runCitizen(e){e.genes=e.genes.concat(e.newGenes);const t=[];let o=this.initialState.clone();for(let s of e.genes)if(this.measurer.add(x[1],()=>{if(t.push(s),o=o.rotateFace(s),o.isSolved()){const a=t.reduce((u,f)=>u.rotateFace(f),this.initialState.clone());return console.log("proof",e.genes),console.log(t),console.log(new y().translateCube(a)),console.log(new y().translateCube(o)),e.genes=t,!0}return!1}))return!0;return!1}calculateCitizenScore(e){return this.measurer.add(x[2],()=>e.cube.getConfiguration().reduce((t,o,s)=>t+lt(o&e.goalState[s]),0))}createSolution(e){const t=this.measurer.add(x[3],()=>e.genes);return this.measurer.finish(),console.log(new y().translateCube(e.cube)),{rotations:t,totalTime:this.measurer.getTotalTime(),data:{armageddonCounter:this.armageddonCounter,metrics:this.measurer.getData(x[0]),generations:this.geneticAlgorithm.getGenerationsCounter()}}}buildSolvedPocketCubeFromCornerCubelet(e){const t=new Map;return e.stickers.forEach(o=>{t.set(o.color,o.side),t.set(Z(o.color),O(o.side))}),new b({colorMap:t})}}class dt{readKeys(e){let t;switch(e.key.toLowerCase()){case"w":t=r.UP;break;case"a":t=r.LEFT;break;case"s":t=r.FRONT;break;case"d":t=r.RIGHT;break;case"f":t=r.BACK;break;case"x":t=r.DOWN;break}if(t!==void 0)return{side:t,counterClockwiseDirection:e.shiftKey,layer:0}}}class nt{constructor(e){h(this,"moves");h(this,"findSolutionResolve");h(this,"findSolutionReject");h(this,"cube");h(this,"startTime");h(this,"keyboardInterpreter");this.cube=e,this.moves=[],this.keyboardInterpreter=new dt}async findSolution(){return this.startTime=Date.now(),new Promise((e,t)=>{this.findSolutionResolve=e,this.findSolutionReject=t})}abort(){this.findSolutionReject()}async readKeys(e){if(this.cube.isSolved())return;const t=this.keyboardInterpreter.readKeys(e);if(t!==void 0)return this.moves.push(t),this.cube=this.cube.rotateFace(t),this.cube.isSolved()&&this.findSolutionResolve({rotations:this.moves,totalTime:Date.now()-this.startTime,data:{human:!0}}),t}}class ot{constructor(e,t){h(this,"mutationRate");h(this,"populationPerGeneration");h(this,"generationsCounter");this.generationsCounter=0,this.mutationRate=e,this.populationPerGeneration=t}createNextGeneration(e){++this.generationsCounter;const t=e.reduce((s,a)=>s+a.score,0),o=e.map(s=>({genes:s.genes,score:parseFloat(s.score.toString())/t}));return Array.from(Array(this.populationPerGeneration)).map(()=>this.createNewCitizen(this.pickOne(o),this.pickOne(o)))}getGenerationsCounter(){return this.generationsCounter}createNewCitizen(e,t){const o=Math.floor(Math.random()*e.genes.length);return{genes:e.genes.map((a,u)=>{let f=e.genes[u];return u>o&&(f=t.genes[u]),Math.random()<this.mutationRate&&(f*=Math.random()*2-1),f}),score:NaN}}pickOne(e){let t=0,o=Math.random();for(;o>0;)o-=e[t].score,++t;return--t,e[t]}}class H{constructor(e,t){h(this,"weights");h(this,"config");if(this.config=e,t)this.weights=t;else{const o=(this.config.inputs+this.config.outputs)*this.config.hiddenNeurons;this.weights=Array.from(Array(o)).map(()=>Math.random()*2-1)}}getWeights(){return this.weights}doTheMagic(e){if(e.length!==this.config.inputs)throw new Error(`Amount of function argument '${e.length}' should match configuration inputs quantity '${this.config.inputs}'`);const t=H.processLayer(e,this.weights.filter((o,s)=>s>=0&&s<this.config.inputs*this.config.hiddenNeurons),this.config.hiddenNeurons);return H.processLayer(t,this.weights.filter((o,s)=>s>=this.config.inputs*this.config.hiddenNeurons),this.config.outputs)}static processLayer(e,t,o){const s=Array.from(Array(o)).map(()=>0);return t.reduce((a,u,f)=>(a[f%o]+=u*e[f%e.length],a),s).map(a=>Math.tanh(a))}}var M=(n=>(n[n.NOT_MEASURED=0]="NOT_MEASURED",n[n.RUN_NEURAL_NETWORK=1]="RUN_NEURAL_NETWORK",n[n.CALCULATE_CITIZEN_SCORE=2]="CALCULATE_CITIZEN_SCORE",n[n.ROTATIONS_TUNING=3]="ROTATIONS_TUNING",n))(M||{});const ft=n=>n.toString(2).replace(/0/g,"").length;class pt{constructor(e){h(this,"measurer");h(this,"goalState");h(this,"inputs");h(this,"initialState");h(this,"actions");h(this,"neuroGeneticAlgorithm");h(this,"citizens");h(this,"aborted");h(this,"armageddonCounter");this.aborted=!1,this.measurer=new j,this.armageddonCounter=0,this.neuroGeneticAlgorithm=new ot(v.geneticData.mutationRate,v.geneticData.populationPerGeneration),this.initialState=e.clone(),this.inputs=e.getConfiguration().length,this.actions=[];const t=e.getCubeletsBySides(r.BACK,r.LEFT,r.DOWN)[0];this.goalState=this.buildSolvedPocketCubeFromCornerCubelet(t).getConfiguration(),this.actions=[],[r.FRONT,r.UP,r.RIGHT].map(o=>[!0,!1].map(s=>{this.actions.push({side:o,counterClockwiseDirection:s,layer:0})})),this.citizens=this.createNewPopulationFromScratch()}async findSolution(){return this.measurer.start(),new Promise((e,t)=>{for(;;){if(this.aborted)return t();for(let o of this.citizens)if(this.runCitizen(o))return e(this.createSolution(o));this.neuroGeneticAlgorithm.getGenerationsCounter()>v.geneticData.armageddonThreshold?(++this.armageddonCounter,this.citizens=this.createNewPopulationFromScratch()):this.citizens=this.createNewPopulationFromPreviousOne()}})}abort(){this.aborted=!0}createNewPopulationFromScratch(){return this.neuroGeneticAlgorithm=new ot(v.geneticData.mutationRate,v.geneticData.populationPerGeneration),this.actions.sort(()=>Math.random()*2-1),Array.from(new Array(v.geneticData.populationPerGeneration)).map(()=>{const e=new H({inputs:this.inputs,hiddenNeurons:v.neuralNetworkData.hiddenNeurons,outputs:this.actions.length});return{genes:e.getWeights(),neuralNetwork:e,cube:this.initialState.clone(),moves:[]}})}createNewPopulationFromPreviousOne(){return this.neuroGeneticAlgorithm.createNextGeneration(this.citizens.map(e=>({genes:e.genes,score:this.calculateCitizenScore(e)}))).map(e=>{const t=new H({inputs:this.inputs,hiddenNeurons:v.neuralNetworkData.hiddenNeurons,outputs:this.actions.length},e.genes);return{genes:e.genes,neuralNetwork:t,cube:this.initialState.clone(),moves:[]}})}runCitizen(e){return Array.from(new Array(v.neuralNetworkData.iterations)).reduce(t=>t||this.measurer.add(M[1],()=>{const o=e.neuralNetwork.doTheMagic(e.cube.getConfiguration());let s=0;for(let a of o){if(a>.75){const u=this.actions[s];if(e.cube=e.cube.rotateFace(u),e.moves.push(u),e.cube.isSolved())return!0}++s}return!1}),!1)}calculateCitizenScore(e){return this.measurer.add(M[2],()=>e.cube.getConfiguration().reduce((t,o,s)=>t+ft(o&this.goalState[s]),0))}createSolution(e){const t=this.measurer.add(M[3],()=>new ut().tune(e.moves));return this.measurer.finish(),{rotations:t,totalTime:this.measurer.getTotalTime(),data:{armageddonCounter:this.armageddonCounter,genes:e.genes,neuralNetwork:e.neuralNetwork,metrics:this.measurer.getData(M[0]),generations:this.neuroGeneticAlgorithm.getGenerationsCounter()}}}buildSolvedPocketCubeFromCornerCubelet(e){const t=new Map;return e.stickers.forEach(o=>{t.set(o.color,o.side),t.set(Z(o.color),O(o.side))}),new b({colorMap:t})}}var gt=typeof globalThis<"u"?globalThis:typeof window<"u"?window:typeof global<"u"?global:typeof self<"u"?self:{};function mt(n){return n&&n.__esModule&&Object.prototype.hasOwnProperty.call(n,"default")?n.default:n}var q={},Ct={get exports(){return q},set exports(n){q=n}},J={},Tt={get exports(){return J},set exports(n){J=n}};(function(n,e){(function(){var t,o,s,a,u,f,C,p,g,L,$,P,Q,V,G;s=Math.floor,L=Math.min,o=function(i,c){return i<c?-1:i>c?1:0},g=function(i,c,l,d,T){var m;if(l==null&&(l=0),T==null&&(T=o),l<0)throw new Error("lo must be non-negative");for(d==null&&(d=i.length);l<d;)m=s((l+d)/2),T(c,i[m])<0?d=m:l=m+1;return[].splice.apply(i,[l,l-l].concat(c)),c},f=function(i,c,l){return l==null&&(l=o),i.push(c),V(i,0,i.length-1,l)},u=function(i,c){var l,d;return c==null&&(c=o),l=i.pop(),i.length?(d=i[0],i[0]=l,G(i,0,c)):d=l,d},p=function(i,c,l){var d;return l==null&&(l=o),d=i[0],i[0]=c,G(i,0,l),d},C=function(i,c,l){var d;return l==null&&(l=o),i.length&&l(i[0],c)<0&&(d=[i[0],c],c=d[0],i[0]=d[1],G(i,0,l)),c},a=function(i,c){var l,d,T,m,w,S;for(c==null&&(c=o),m=function(){S=[];for(var I=0,F=s(i.length/2);0<=F?I<F:I>F;0<=F?I++:I--)S.push(I);return S}.apply(this).reverse(),w=[],d=0,T=m.length;d<T;d++)l=m[d],w.push(G(i,l,c));return w},Q=function(i,c,l){var d;if(l==null&&(l=o),d=i.indexOf(c),d!==-1)return V(i,0,d,l),G(i,d,l)},$=function(i,c,l){var d,T,m,w,S;if(l==null&&(l=o),T=i.slice(0,c),!T.length)return T;for(a(T,l),S=i.slice(c),m=0,w=S.length;m<w;m++)d=S[m],C(T,d,l);return T.sort(l).reverse()},P=function(i,c,l){var d,T,m,w,S,I,F,W,tt;if(l==null&&(l=o),c*10<=i.length){if(m=i.slice(0,c).sort(l),!m.length)return m;for(T=m[m.length-1],F=i.slice(c),w=0,I=F.length;w<I;w++)d=F[w],l(d,T)<0&&(g(m,d,0,null,l),m.pop(),T=m[m.length-1]);return m}for(a(i,l),tt=[],S=0,W=L(c,i.length);0<=W?S<W:S>W;0<=W?++S:--S)tt.push(u(i,l));return tt},V=function(i,c,l,d){var T,m,w;for(d==null&&(d=o),T=i[l];l>c;){if(w=l-1>>1,m=i[w],d(T,m)<0){i[l]=m,l=w;continue}break}return i[l]=T},G=function(i,c,l){var d,T,m,w,S;for(l==null&&(l=o),T=i.length,S=c,m=i[c],d=2*c+1;d<T;)w=d+1,w<T&&!(l(i[d],i[w])<0)&&(d=w),i[c]=i[d],c=d,d=2*c+1;return i[c]=m,V(i,S,c,l)},t=function(){i.push=f,i.pop=u,i.replace=p,i.pushpop=C,i.heapify=a,i.updateItem=Q,i.nlargest=$,i.nsmallest=P;function i(c){this.cmp=c??o,this.nodes=[]}return i.prototype.push=function(c){return f(this.nodes,c,this.cmp)},i.prototype.pop=function(){return u(this.nodes,this.cmp)},i.prototype.peek=function(){return this.nodes[0]},i.prototype.contains=function(c){return this.nodes.indexOf(c)!==-1},i.prototype.replace=function(c){return p(this.nodes,c,this.cmp)},i.prototype.pushpop=function(c){return C(this.nodes,c,this.cmp)},i.prototype.heapify=function(){return a(this.nodes,this.cmp)},i.prototype.updateItem=function(c){return Q(this.nodes,c,this.cmp)},i.prototype.clear=function(){return this.nodes=[]},i.prototype.empty=function(){return this.nodes.length===0},i.prototype.size=function(){return this.nodes.length},i.prototype.clone=function(){var c;return c=new i,c.nodes=this.nodes.slice(0),c},i.prototype.toArray=function(){return this.nodes.slice(0)},i.prototype.insert=i.prototype.push,i.prototype.top=i.prototype.peek,i.prototype.front=i.prototype.peek,i.prototype.has=i.prototype.contains,i.prototype.copy=i.prototype.clone,i}(),function(i,c){return n.exports=c()}(this,function(){return t})}).call(gt)})(Tt),function(n){n.exports=J}(Ct);var wt=mt(q),D=(n=>(n[n.ADD_CANDIDATE=0]="ADD_CANDIDATE",n[n.POP_CANDIDATE=1]="POP_CANDIDATE",n[n.CHECK_SOLUTION=2]="CHECK_SOLUTION",n[n.BREATHING_TIME=3]="BREATHING_TIME",n[n.HASH_CALCULATION=4]="HASH_CALCULATION",n[n.VISISTED_LIST_CHECK=5]="VISISTED_LIST_CHECK",n[n.ADD_TO_VISISTED_LIST_CHECK=6]="ADD_TO_VISISTED_LIST_CHECK",n[n.PERFORM_ROTATION=7]="PERFORM_ROTATION",n[n.NOT_MEASURED=8]="NOT_MEASURED",n))(D||{});class St{constructor(e){h(this,"measurer");h(this,"candidates");h(this,"goalState");h(this,"visitedChecklist");h(this,"actions");h(this,"aborted");this.aborted=!1,this.measurer=new j,this.candidates=new wt((s,a)=>s.cost-a.cost),this.visitedChecklist=new Map;const t={cost:0,cube:e,rotation:void 0,parent:void 0};this.candidates.push(t),this.actions=[];const o=e.getCubeletsBySides(r.BACK,r.LEFT,r.DOWN)[0];this.goalState=this.buildSolvedPocketCubeFromCornerCubelet(o),[r.FRONT,r.UP,r.RIGHT].map(s=>[!0,!1].map(a=>{this.actions.push({side:s,counterClockwiseDirection:a,layer:0})}))}async findSolution(){return new Promise((e,t)=>{this.measurer.start();let o,s=0;for(;this.candidates.size()>0;){if(this.aborted)return t();if(++s,o=this.measurer.add(D[1],()=>this.candidates.pop()),!this.measurer.add(D[5],()=>this.visitedChecklist.has(o.cube.getHash()))){if(this.measurer.add(D[2],()=>o.cube.isSolved()))return this.measurer.finish(),this.candidates.clear(),e(this.createSolution(o,s));this.measurer.add(D[6],()=>this.visitedChecklist.set(o.cube.getHash(),!0)),this.applyRotations(o)}}})}abort(){this.aborted=!0}createSolution(e,t){const o=[];let s=e;for(;s&&s.rotation;)o.unshift(s.rotation),s=s.parent;return{rotations:o,totalTime:this.measurer.getTotalTime(),data:{metrics:this.measurer.getData(D[8]),iterations:t}}}applyRotations(e){this.actions.forEach(t=>{const o=this.measurer.add(D[7],()=>e.cube.rotateFace(t));this.measurer.add(D[5],()=>this.visitedChecklist.has(o.getHash()))||this.measurer.add(D[0],()=>{this.candidates.push({cost:e.cost+1+this.calculateDistanceToFinalState(o),cube:o,rotation:t,parent:e})})})}calculateDistanceToFinalState(e){return e.getAllCubelets().reduce((o,s)=>{const a=this.goalState.getCubeletsByColor(...s.stickers.map(u=>u.color))[0];return o+s.stickers.reduce((u,f)=>a.stickers.some(C=>C.side===f.side)?u-1:u,s.stickers.length)},0)/4}buildSolvedPocketCubeFromCornerCubelet(e){const t=new Map;return e.stickers.forEach(o=>{t.set(o.color,o.side),t.set(Z(o.color),O(o.side))}),new b({colorMap:t})}}var Rt=N;function N(){this._start=null,this._end=null,this.length=0}N.prototype.unShift=function(n){if(this._start===null)this._start=B(n),this._end=this._start;else{var e=this._start;this._start.previous=B(n),this._start=this._start.previous,this._start.next=e}this.length++},N.prototype.push=function(n){if(this._start===null)this._start=B(n),this._end=this._start;else{var e=this._end;this._end.next=B(n),this._end=this._end.next,this._end.previous=e}this.length++},N.prototype.add=function(n,e){if(n%1===0)if(n<=0)this.unShift(e);else if(n>=this.length)this.push(e);else{var t=X.call(this,n);if(t){var o=t.previous,s=t,a=B(e);a.previous=o,o.next=a,a.next=s,s.previous=a,this.length++}}},N.prototype.shift=function(){if(this._start){var n=this._start.data;return this._start.next===null?(this._end=null,this._start=null):(this._start=this._start.next,this._start.previous=null),this.length--,n}else return},N.prototype.pop=function(){if(this._end){var n=this._end.data;return this._end.previous===null?(this._end=null,this._start=null):(this._end=this._end.previous,this._end.next=null),this.length--,n}else return},N.prototype.remove=function(n){if(n===0)return this.shift();if(n===this.length-1)return this.pop();var e=X.call(this,n);if(e){var t=e.previous,o=e.next;t.next=o,o.previous=t,this.length--}else return},N.prototype.first=function(){if(this._start)return this._start.data},N.prototype.last=function(){if(this._end)return this._end.data},N.prototype.get=function(n){var e=X.call(this,n);if(e)return e.data},N.prototype.toString=function(){for(var n=this._start,e="",t=0;t<this.length;t++)typeof n.data=="object"?e+=JSON.stringify(n.data):e+=n.data,t!==this.length-1&&(e+=", "),n=n.next;return e};function B(n){return{data:n,previous:null,next:null}}function X(n){var e,t;if(n>=this.length||n<0||n%1!==0)e=null;else if(n<this.length/2)for(e=this._start,t=0;t<n;t++)e=e.next;else for(e=this._end,t=this.length-1;t>n;t--)e=e.previous;return e}var _=(n=>(n[n.ADD_CANDIDATE=0]="ADD_CANDIDATE",n[n.POP_CANDIDATE=1]="POP_CANDIDATE",n[n.CHECK_SOLUTION=2]="CHECK_SOLUTION",n[n.BREATHING_TIME=3]="BREATHING_TIME",n[n.HASH_CALCULATION=4]="HASH_CALCULATION",n[n.VISISTED_LIST_CHECK=5]="VISISTED_LIST_CHECK",n[n.ADD_TO_VISISTED_LIST_CHECK=6]="ADD_TO_VISISTED_LIST_CHECK",n[n.PERFORM_ROTATION=7]="PERFORM_ROTATION",n[n.NOT_MEASURED=8]="NOT_MEASURED",n))(_||{});class bt{constructor(e){h(this,"measurer");h(this,"candidates");h(this,"visitedChecklist");h(this,"actions");h(this,"aborted");this.measurer=new j,this.visitedChecklist=new Map,this.candidates=new Rt,this.aborted=!1;const t={cube:e,rotation:void 0,parent:void 0};this.candidates.push(t),this.actions=this.createActions()}abort(){this.aborted=!0}async findSolution(){return new Promise((e,t)=>{this.measurer.start();let o,s=0;for(;this.candidates.length>0;){if(this.aborted)return t();if(++s,o=this.measurer.add(_[1],()=>this.candidates.shift()),!this.measurer.add(_[5],()=>this.visitedChecklist.has(o.cube.getHash()))){if(this.measurer.add(_[2],()=>o.cube.isSolved()))return this.measurer.finish(),e(this.createSolution(o,s));this.measurer.add(_[6],()=>this.visitedChecklist.set(o.cube.getHash(),!0)),this.applyRotations(o)}}})}createActions(){const e=[],t=[r.RIGHT,r.LEFT][Math.floor(Math.random()*2)],o=[r.UP,r.DOWN][Math.floor(Math.random()*2)],s=[r.FRONT,r.BACK][Math.floor(Math.random()*2)];return[t,o,s].map(a=>[!0,!1].map(u=>{e.push({side:a,counterClockwiseDirection:u,layer:0})})),e}createSolution(e,t){const o=[];let s=e;for(;s&&s.rotation;)o.unshift(s.rotation),s=s.parent;return{rotations:o,totalTime:this.measurer.getTotalTime(),data:{metrics:this.measurer.getData(_[8]),iterations:t}}}applyRotations(e){this.actions.forEach(t=>{const o=this.measurer.add(_[7],()=>e.cube.rotateFace(t));this.measurer.add(_[5],()=>this.visitedChecklist.has(o.getHash()))||this.measurer.add(_[0],()=>{this.candidates.push({cube:o,rotation:t,parent:e})})})}}const v={geneticData:{mutationRate:.05,populationPerGeneration:100,armageddonThreshold:500},neuralNetworkData:{hiddenNeurons:10,iterations:20}},U={populationPerGeneration:100,elitism:10,armageddonThreshold:50},Nt={world:{debug:!1,scrambleMoves:10,scrambleRotationDuration:50,cubesCircleRay:5},renderers:{translationDuration:500,rotationDuration:250,titleDistance:8.5,cubeSize:2.5},solvers:[{dimension:"2x2",methods:[{key:"Human",instantiator:n=>new nt(new b({clone:n})),checked:!1,info:"Use keys 'WASDFX' combined with 'shift' to rotate cube faces"},{key:"BFS",instantiator:n=>new bt(new b({clone:n})),checked:!1,info:"Breadth-first-search. Brute force"},{key:"A*",instantiator:n=>new St(new b({clone:n})),checked:!1,info:"Astar. Uses number of cubies misplaced as heuristic"},{key:"NE",instantiator:n=>new pt(new b({clone:n})),checked:!1,info:`Neuro Evolutionary. Uses number of misplaced stickers as fitness function. Hidden neurons: ${v.neuralNetworkData.hiddenNeurons}. Population: ${v.geneticData.populationPerGeneration}`},{key:"GA",instantiator:n=>new ht(new b({clone:n})),checked:!0,info:`Human guided genetic algorithm. Uses number of misplaced stickers as fitness function. Population: ${U.populationPerGeneration}. Elitism ${U.elitism}`}]},{dimension:"3x3",methods:[]},{dimension:"4x4",methods:[]}]},vt=n=>{for(let e of Nt.solvers)if(e.dimension.toLowerCase()===n.dimension.toLowerCase()){for(let t of e.methods)if(t.key.toLowerCase()===n.solverTag.toLowerCase())return t;return}};let K;self.onmessage=async n=>{if(n.data.abort)K.abort();else{const e=n.data.solverTag.toLowerCase(),t=vt(n.data);if(e&&t)if(n.data.cube){K=t.instantiator(n.data.cube);try{const o=await K.findSolution();self.postMessage({solution:JSON.stringify(o),solverKey:e})}catch(o){console.log(`Solver '${n.data.dimension}.${e}' aborted`,o)}}else if(n.data.keyboardEvent){if(K instanceof nt){const o=await K.readKeys(n.data.keyboardEvent);o!==void 0&&self.postMessage({faceRotation:o,solverKey:e})}}else self.postMessage({error:`Command for '${n.data}' not found`,solverTag:n.data.solverTag});else self.postMessage({error:`Solver '${n.data.solverTag}' not found`,solverTag:n.data.solverTag})}}})();
