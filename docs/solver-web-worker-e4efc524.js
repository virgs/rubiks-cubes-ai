var rt=Object.defineProperty;var at=(a,C,D)=>C in a?rt(a,C,{enumerable:!0,configurable:!0,writable:!0,value:D}):a[C]=D;var f=(a,C,D)=>(at(a,typeof C!="symbol"?C+"":C,D),D);(function(){"use strict";var a=(t=>(t[t.UP=0]="UP",t[t.LEFT=1]="LEFT",t[t.FRONT=2]="FRONT",t[t.RIGHT=3]="RIGHT",t[t.BACK=4]="BACK",t[t.DOWN=5]="DOWN",t))(a||{});const C=()=>Object.keys(a).filter(t=>!isNaN(Number(t))).map(t=>Number(t)),D=t=>{switch(t){case 0:return 5;case 5:return 0;case 1:return 3;case 3:return 1;case 2:return 4;case 4:return 2}};class M{constructor(e){f(this,"moves");f(this,"cube");f(this,"findSolutionResolve");f(this,"startTime");this.cube=e,this.moves=[]}async findSolution(){return this.startTime=Date.now(),new Promise(e=>{this.findSolutionResolve=e})}async readKeys(e){if(this.cube.isSolved())return;let s;switch(e.key.toLowerCase()){case"w":s=a.UP;break;case"a":s=a.LEFT;break;case"s":s=a.FRONT;break;case"d":s=a.RIGHT;break;case"f":s=a.BACK;break;case"x":s=a.DOWN;break}if(s!==void 0){const n={side:s,counterClockwiseDirection:e.shiftKey};return this.moves.push(n),this.cube=this.cube.rotateFace(n),this.cube.isSolved()&&this.findSolutionResolve({rotations:this.moves,totalTime:Date.now()-this.startTime,data:{human:!0}}),n}}}var J=typeof globalThis<"u"?globalThis:typeof window<"u"?window:typeof global<"u"?global:typeof self<"u"?self:{};function X(t){return t&&t.__esModule&&Object.prototype.hasOwnProperty.call(t,"default")?t.default:t}var P={},Q={get exports(){return P},set exports(t){P=t}},U={},Z={get exports(){return U},set exports(t){U=t}};(function(t,e){(function(){var s,n,u,h,p,S,I,x,V,z,j,Y,G,L,b;u=Math.floor,z=Math.min,n=function(i,o){return i<o?-1:i>o?1:0},V=function(i,o,r,c,l){var d;if(r==null&&(r=0),l==null&&(l=n),r<0)throw new Error("lo must be non-negative");for(c==null&&(c=i.length);r<c;)d=u((r+c)/2),l(o,i[d])<0?c=d:r=d+1;return[].splice.apply(i,[r,r-r].concat(o)),o},S=function(i,o,r){return r==null&&(r=n),i.push(o),L(i,0,i.length-1,r)},p=function(i,o){var r,c;return o==null&&(o=n),r=i.pop(),i.length?(c=i[0],i[0]=r,b(i,0,o)):c=r,c},x=function(i,o,r){var c;return r==null&&(r=n),c=i[0],i[0]=o,b(i,0,r),c},I=function(i,o,r){var c;return r==null&&(r=n),i.length&&r(i[0],o)<0&&(c=[i[0],o],o=c[0],i[0]=c[1],b(i,0,r)),o},h=function(i,o){var r,c,l,d,T,m;for(o==null&&(o=n),d=function(){m=[];for(var E=0,w=u(i.length/2);0<=w?E<w:E>w;0<=w?E++:E--)m.push(E);return m}.apply(this).reverse(),T=[],c=0,l=d.length;c<l;c++)r=d[c],T.push(b(i,r,o));return T},G=function(i,o,r){var c;if(r==null&&(r=n),c=i.indexOf(o),c!==-1)return L(i,0,c,r),b(i,c,r)},j=function(i,o,r){var c,l,d,T,m;if(r==null&&(r=n),l=i.slice(0,o),!l.length)return l;for(h(l,r),m=i.slice(o),d=0,T=m.length;d<T;d++)c=m[d],I(l,c,r);return l.sort(r).reverse()},Y=function(i,o,r){var c,l,d,T,m,E,w,k,W;if(r==null&&(r=n),o*10<=i.length){if(d=i.slice(0,o).sort(r),!d.length)return d;for(l=d[d.length-1],w=i.slice(o),T=0,E=w.length;T<E;T++)c=w[T],r(c,l)<0&&(V(d,c,0,null,r),d.pop(),l=d[d.length-1]);return d}for(h(i,r),W=[],m=0,k=z(o,i.length);0<=k?m<k:m>k;0<=k?++m:--m)W.push(p(i,r));return W},L=function(i,o,r,c){var l,d,T;for(c==null&&(c=n),l=i[r];r>o;){if(T=r-1>>1,d=i[T],c(l,d)<0){i[r]=d,r=T;continue}break}return i[r]=l},b=function(i,o,r){var c,l,d,T,m;for(r==null&&(r=n),l=i.length,m=o,d=i[o],c=2*o+1;c<l;)T=c+1,T<l&&!(r(i[c],i[T])<0)&&(c=T),i[o]=i[c],o=c,c=2*o+1;return i[o]=d,L(i,m,o,r)},s=function(){i.push=S,i.pop=p,i.replace=x,i.pushpop=I,i.heapify=h,i.updateItem=G,i.nlargest=j,i.nsmallest=Y;function i(o){this.cmp=o??n,this.nodes=[]}return i.prototype.push=function(o){return S(this.nodes,o,this.cmp)},i.prototype.pop=function(){return p(this.nodes,this.cmp)},i.prototype.peek=function(){return this.nodes[0]},i.prototype.contains=function(o){return this.nodes.indexOf(o)!==-1},i.prototype.replace=function(o){return x(this.nodes,o,this.cmp)},i.prototype.pushpop=function(o){return I(this.nodes,o,this.cmp)},i.prototype.heapify=function(){return h(this.nodes,this.cmp)},i.prototype.updateItem=function(o){return G(this.nodes,o,this.cmp)},i.prototype.clear=function(){return this.nodes=[]},i.prototype.empty=function(){return this.nodes.length===0},i.prototype.size=function(){return this.nodes.length},i.prototype.clone=function(){var o;return o=new i,o.nodes=this.nodes.slice(0),o},i.prototype.toArray=function(){return this.nodes.slice(0)},i.prototype.insert=i.prototype.push,i.prototype.top=i.prototype.peek,i.prototype.front=i.prototype.peek,i.prototype.has=i.prototype.contains,i.prototype.copy=i.prototype.clone,i}(),function(i,o){return t.exports=o()}(this,function(){return s})}).call(J)})(Z),function(t){t.exports=U}(Q);var q=X(P);const v=class{constructor(){v.faceRotatorMap||this.initializeMap()}rotate(e,s){const n=[...e];return v.faceRotatorMap.get(s.side).forEach(u=>{s.counterClockwiseDirection?n[u.source]=e[u.destination]:n[u.destination]=e[u.source]}),n}initializeMap(){v.faceRotatorMap=new Map;const e=this.createUpFaceClockwiseRotator(),s=this.createLeftFaceClockwiseRotator(),n=this.createFrontFaceClockwiseRotator(),u=this.createRightFaceClockwiseRotator(),h=this.createBackFaceClockwiseRotator(),p=this.createDownFaceClockwiseRotator();v.faceRotatorMap.set(a.UP,e),v.faceRotatorMap.set(a.LEFT,s),v.faceRotatorMap.set(a.FRONT,n),v.faceRotatorMap.set(a.RIGHT,u),v.faceRotatorMap.set(a.BACK,h),v.faceRotatorMap.set(a.DOWN,p)}createDownFaceClockwiseRotator(){return[{destination:6,source:18},{destination:7,source:19},{destination:10,source:6},{destination:11,source:7},{destination:14,source:10},{destination:15,source:11},{destination:18,source:14},{destination:19,source:15},{destination:20,source:23},{destination:21,source:20},{destination:22,source:21},{destination:23,source:22}]}createRightFaceClockwiseRotator(){return[{destination:1,source:9},{destination:2,source:10},{destination:9,source:21},{destination:10,source:22},{destination:12,source:15},{destination:13,source:12},{destination:14,source:13},{destination:15,source:14},{destination:16,source:2},{destination:19,source:1},{destination:21,source:19},{destination:22,source:16}]}createUpFaceClockwiseRotator(){return[{destination:0,source:3},{destination:1,source:0},{destination:2,source:1},{destination:3,source:2},{destination:4,source:8},{destination:5,source:9},{destination:8,source:12},{destination:9,source:13},{destination:12,source:16},{destination:13,source:17},{destination:16,source:4},{destination:17,source:5}]}createBackFaceClockwiseRotator(){return[{destination:0,source:13},{destination:1,source:14},{destination:4,source:1},{destination:7,source:0},{destination:13,source:22},{destination:14,source:23},{destination:16,source:19},{destination:17,source:16},{destination:18,source:17},{destination:19,source:18},{destination:22,source:7},{destination:23,source:4}]}createLeftFaceClockwiseRotator(){return[{destination:0,source:18},{destination:3,source:17},{destination:4,source:7},{destination:5,source:4},{destination:6,source:5},{destination:7,source:6},{destination:8,source:0},{destination:11,source:3},{destination:17,source:23},{destination:18,source:20},{destination:20,source:8},{destination:23,source:11}]}createFrontFaceClockwiseRotator(){return[{destination:2,source:5},{destination:3,source:6},{destination:5,source:20},{destination:6,source:21},{destination:8,source:11},{destination:9,source:8},{destination:10,source:9},{destination:11,source:10},{destination:12,source:3},{destination:15,source:2},{destination:20,source:15},{destination:21,source:12}]}};let N=v;f(N,"faceRotatorMap");var O=(t=>(t[t.YELLOW=0]="YELLOW",t[t.ORANGE=1]="ORANGE",t[t.BLUE=2]="BLUE",t[t.RED=3]="RED",t[t.GREEN=4]="GREEN",t[t.WHITE=5]="WHITE",t))(O||{});const tt=t=>{switch(t){case 2:return 4;case 4:return 2;case 3:return 1;case 1:return 3;case 0:return 5;case 5:return 0}},A=new Map;A.set(a.FRONT,O.BLUE),A.set(a.UP,O.YELLOW),A.set(a.RIGHT,O.RED),A.set(a.LEFT,O.ORANGE),A.set(a.BACK,O.GREEN),A.set(a.DOWN,O.WHITE);const K=[[{side:a.FRONT,id:8},{side:a.LEFT,id:5},{side:a.UP,id:3}],[{side:a.FRONT,id:9},{side:a.RIGHT,id:12},{side:a.UP,id:2}],[{side:a.FRONT,id:11},{side:a.LEFT,id:6},{side:a.DOWN,id:20}],[{side:a.FRONT,id:10},{side:a.RIGHT,id:15},{side:a.DOWN,id:21}],[{side:a.BACK,id:16},{side:a.RIGHT,id:13},{side:a.UP,id:1}],[{side:a.BACK,id:17},{side:a.LEFT,id:4},{side:a.UP,id:0}],[{side:a.BACK,id:19},{side:a.RIGHT,id:14},{side:a.DOWN,id:22}],[{side:a.BACK,id:18},{side:a.LEFT,id:7},{side:a.DOWN,id:23}]];class y{constructor(e){f(this,"hash");f(this,"configuration");f(this,"dimension");f(this,"faceRotator");if(this.faceRotator=new N,this.dimension=2,e!=null&&e.clone)this.configuration=[...e.clone];else{let s=(e==null?void 0:e.colorMap)||A;this.configuration=[],C().forEach(n=>{const u=Array.from(new Array(this.dimension*this.dimension)).map(()=>s.get(n));this.configuration.push(...u)})}this.hash=this.configuration.join(".")}clone(){return new y({clone:this.configuration})}getDimension(){return this.dimension}getConfiguration(){return[...this.configuration]}getHash(){return this.hash}isSolved(){const e=this.dimension*this.dimension,s=C(),n=Array.from(new Array(e));return s.every((u,h)=>n.every((p,S)=>this.configuration[h*e+S]===this.configuration[h*e]))}rotateFace(e){const s=this.faceRotator.rotate(this.configuration,e);return new y({clone:s})}getCubeletsBySides(...e){const s=K.filter(n=>n.every(u=>e.includes(u.side)));return this.getCubeletsFromStickers(s)}getCubeletsByColor(...e){const s=K.filter(n=>n.every(u=>e.includes(this.configuration[u.id])));return this.getCubeletsFromStickers(s)}getAllCubelets(){return this.getCubeletsFromStickers(K)}getCubeletsFromStickers(e){return e.map(s=>({stickers:s.map(n=>{const u=n.id%4===0||n.id%4===3?0:1,h=n.id%4===0||n.id%4===1?0:1;return{side:n.side,id:n.id,color:this.configuration[n.id],x:u,y:h}})}))}}class ${constructor(){f(this,"map");f(this,"startTime");f(this,"totalTime");this.map=new Map}add(e,s){const n=new Date().getTime(),u=s(),h=new Date().getTime(),p=this.map.get(e)||{time:0,calls:0};return p.time+=h-n,p.calls++,this.map.set(e,p),u}start(){this.startTime=Date.now()}finish(){this.startTime&&(this.totalTime=Date.now()-this.startTime)}getTotalTime(){return this.totalTime}getData(e){if(this.totalTime){let s=0;const n={};return Array.from(this.map.entries()).forEach(u=>{const[h,p]=u;s+=p.time,n[h]=this.createSummary(p.time,p.calls)}),e&&(n[e]=this.createSummary(this.totalTime-s,0)),n}}createSummary(e,s){let n=`${e}ms (~${Math.trunc(1e3*e/this.totalTime)/10}%)`;return s>0&&(n+=`; calls: ${s}; avg: ~${10*Math.trunc(1e6*e*1/s)/10}ns`),n}}var _=(t=>(t[t.ADD_CANDIDATE=0]="ADD_CANDIDATE",t[t.POP_CANDIDATE=1]="POP_CANDIDATE",t[t.CHECK_SOLUTION=2]="CHECK_SOLUTION",t[t.BREATHING_TIME=3]="BREATHING_TIME",t[t.HASH_CALCULATION=4]="HASH_CALCULATION",t[t.VISISTED_LIST_CHECK=5]="VISISTED_LIST_CHECK",t[t.ADD_TO_VISISTED_LIST_CHECK=6]="ADD_TO_VISISTED_LIST_CHECK",t[t.PERFORM_ROTATION=7]="PERFORM_ROTATION",t[t.NOT_MEASURED=8]="NOT_MEASURED",t))(_||{});class et{constructor(e){f(this,"measurer");f(this,"candidates");f(this,"goalState");f(this,"visitedChecklist");f(this,"actions");this.measurer=new $,this.candidates=new q((n,u)=>n.cost-u.cost),this.visitedChecklist=new Map;const s={cost:0,cube:e,rotation:void 0,parent:void 0};this.candidates.push(s),this.actions=[],this.goalState=this.buildSolvedPocketCubeFromCornerCubelet(e.getCubeletsBySides(a.BACK,a.LEFT,a.DOWN)[0]),[a.FRONT,a.UP,a.RIGHT].map(n=>[!0,!1].map(u=>{this.actions.push({side:n,counterClockwiseDirection:u,layer:0})}))}async findSolution(){return new Promise(e=>{this.measurer.start();let s,n=0;for(;this.candidates.size()>0;)if(++n,s=this.measurer.add(_[1],()=>this.candidates.pop()),!this.measurer.add(_[5],()=>this.visitedChecklist.has(s.cube.getHash()))){if(this.measurer.add(_[2],()=>s.cube.isSolved()))return this.measurer.finish(),this.candidates.clear(),e(this.createSolution(s,n));this.measurer.add(_[6],()=>this.visitedChecklist.set(s.cube.getHash(),!0)),this.applyRotations(s)}})}createSolution(e,s){const n=[];let u=e;for(;u&&u.rotation;)n.unshift(u.rotation),u=u.parent;return{rotations:n,totalTime:this.measurer.getTotalTime(),data:{metrics:this.measurer.getData(_[8]),iterations:s}}}applyRotations(e){this.actions.forEach(s=>{const n=this.measurer.add(_[7],()=>e.cube.rotateFace(s));this.measurer.add(_[5],()=>this.visitedChecklist.has(n.getHash()))||this.measurer.add(_[0],()=>{this.candidates.push({cost:e.cost+1+this.calculateDistanceToFinalState(n),cube:n,rotation:s,parent:e})})})}calculateDistanceToFinalState(e){return e.getAllCubelets().reduce((n,u)=>{const h=this.goalState.getCubeletsByColor(...u.stickers.map(p=>p.color))[0];return n+u.stickers.reduce((p,S)=>h.stickers.some(I=>I.side===S.side)?p-1:p,u.stickers.length)},0)/4}buildSolvedPocketCubeFromCornerCubelet(e){const s=new Map;return e.stickers.forEach(n=>{s.set(n.side,n.color),s.set(D(n.side),tt(n.color))}),new y({colorMap:s})}}var st=g;function g(){this._start=null,this._end=null,this.length=0}g.prototype.unShift=function(t){if(this._start===null)this._start=F(t),this._end=this._start;else{var e=this._start;this._start.previous=F(t),this._start=this._start.previous,this._start.next=e}this.length++},g.prototype.push=function(t){if(this._start===null)this._start=F(t),this._end=this._start;else{var e=this._end;this._end.next=F(t),this._end=this._end.next,this._end.previous=e}this.length++},g.prototype.add=function(t,e){if(t%1===0)if(t<=0)this.unShift(e);else if(t>=this.length)this.push(e);else{var s=B.call(this,t);if(s){var n=s.previous,u=s,h=F(e);h.previous=n,n.next=h,h.next=u,u.previous=h,this.length++}}},g.prototype.shift=function(){if(this._start){var t=this._start.data;return this._start.next===null?(this._end=null,this._start=null):(this._start=this._start.next,this._start.previous=null),this.length--,t}else return},g.prototype.pop=function(){if(this._end){var t=this._end.data;return this._end.previous===null?(this._end=null,this._start=null):(this._end=this._end.previous,this._end.next=null),this.length--,t}else return},g.prototype.remove=function(t){if(t===0)return this.shift();if(t===this.length-1)return this.pop();var e=B.call(this,t);if(e){var s=e.previous,n=e.next;s.next=n,n.previous=s,this.length--}else return},g.prototype.first=function(){if(this._start)return this._start.data},g.prototype.last=function(){if(this._end)return this._end.data},g.prototype.get=function(t){var e=B.call(this,t);if(e)return e.data},g.prototype.toString=function(){for(var t=this._start,e="",s=0;s<this.length;s++)typeof t.data=="object"?e+=JSON.stringify(t.data):e+=t.data,s!==this.length-1&&(e+=", "),t=t.next;return e};function F(t){return{data:t,previous:null,next:null}}function B(t){var e,s;if(t>=this.length||t<0||t%1!==0)e=null;else if(t<this.length/2)for(e=this._start,s=0;s<t;s++)e=e.next;else for(e=this._end,s=this.length-1;s>t;s--)e=e.previous;return e}var R=(t=>(t[t.ADD_CANDIDATE=0]="ADD_CANDIDATE",t[t.POP_CANDIDATE=1]="POP_CANDIDATE",t[t.CHECK_SOLUTION=2]="CHECK_SOLUTION",t[t.BREATHING_TIME=3]="BREATHING_TIME",t[t.HASH_CALCULATION=4]="HASH_CALCULATION",t[t.VISISTED_LIST_CHECK=5]="VISISTED_LIST_CHECK",t[t.ADD_TO_VISISTED_LIST_CHECK=6]="ADD_TO_VISISTED_LIST_CHECK",t[t.PERFORM_ROTATION=7]="PERFORM_ROTATION",t[t.NOT_MEASURED=8]="NOT_MEASURED",t))(R||{});class it{constructor(e){f(this,"measurer");f(this,"candidates");f(this,"visitedChecklist");f(this,"actions");this.measurer=new $,this.visitedChecklist=new Map,this.candidates=new st;const s={cube:e,rotation:void 0,parent:void 0};this.candidates.push(s),this.actions=[],[a.FRONT,a.UP,a.RIGHT].map(n=>[!0,!1].map(u=>{this.actions.push({side:n,counterClockwiseDirection:u,layer:0})}))}async findSolution(){return new Promise(e=>{this.measurer.start();let s,n=0;for(;this.candidates.length>0;)if(++n,s=this.measurer.add(R[1],()=>this.candidates.shift()),!this.measurer.add(R[5],()=>this.visitedChecklist.has(s.cube.getHash()))){if(this.measurer.add(R[2],()=>s.cube.isSolved()))return this.measurer.finish(),e(this.createSolution(s,n));this.measurer.add(R[6],()=>this.visitedChecklist.set(s.cube.getHash(),!0)),this.applyRotations(s)}})}createSolution(e,s){const n=[];let u=e;for(;u&&u.rotation;)n.unshift(u.rotation),u=u.parent;return{rotations:n,totalTime:this.measurer.getTotalTime(),data:{metrics:this.measurer.getData(R[8]),iterations:s}}}applyRotations(e){this.actions.forEach(s=>{const n=this.measurer.add(R[7],()=>e.cube.rotateFace(s));this.measurer.add(R[5],()=>this.visitedChecklist.has(n.getHash()))||this.measurer.add(R[0],()=>{this.candidates.push({cube:n,rotation:s,parent:e})})})}}const nt={world:{debug:!1,scrambleMoves:20,scrambleRotationDuration:100,cubesCircleRay:5},renderers:{translationDuration:500,rotationDuration:300,titleDistance:8.5,cubeSize:2.5},solvers:[{dimension:"2x2",methods:[{key:"Human",instantiator:t=>new M(t),checked:!1,info:"Use keys WASDFX combined with shift to rotate cube faces"},{key:"BFS",instantiator:t=>new it(t),checked:!1},{key:"A*",instantiator:t=>new et(t),checked:!0}]},{dimension:"3x3",methods:[]},{dimension:"4x4",methods:[]}]},ot=t=>{for(let e of nt.solvers)if(e.dimension.toLowerCase()===t.dimension.toLowerCase()){for(let s of e.methods)if(s.key.toLowerCase()===t.solverTag.toLowerCase())return s;return}};let H;self.onmessage=async t=>{const e=t.data.solverTag.toLowerCase(),s=ot(t.data);if(e&&s)if(t.data.cube){const n=new y({clone:t.data.cube});H=s.instantiator(n);const u=await H.findSolution();self.postMessage({solution:JSON.stringify(u),solverKey:e})}else if(t.data.keyboardEvent){if(H instanceof M){const n=await H.readKeys(t.data.keyboardEvent);n!==void 0&&self.postMessage({faceRotation:n,solverKey:e})}}else self.postMessage({error:`Command for '${t.data}' not found`,solverTag:t.data.solverTag});else self.postMessage({error:`Solver '${t.data.solverTag}' not found`,solverTag:t.data.solverTag})}})();
